package org.matheclipse.core.integrate.rubi45;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctionCtors.*;
import static org.matheclipse.core.integrate.rubi45.UtilityFunctions.*;
import org.matheclipse.core.interfaces.IAST;

/** 
 * IndefiniteIntegrationRules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class IntRules25 { 
  public static IAST RULES = List( 
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Dist(C1D2,Subst(Int(Times(Power(x,Times(C1D2,Plus(m,Negate(C1)))),Power(Plus(d,Times(e,x)),q),Power(Plus(a,Times(b,x),Times(c,Sqr(x))),p)),x),x,Sqr(x)),x),And(FreeQ(List(a,b,c,d,e,p,q),x),IntegerQ(Times(C1D2,Plus(m,Negate(C1))))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Dist(C1D2,Subst(Int(Times(Power(x,Times(C1D2,Plus(m,Negate(C1)))),Power(Plus(d,Times(e,x)),q),Power(Plus(a,Times(c,Sqr(x))),p)),x),x,Sqr(x)),x),And(FreeQ(List(a,c,d,e,p,q),x),IntegerQ(Times(C1D2,Plus(m,C1)))))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Sqr(x),Power(e,-1))),p)),x),And(FreeQ(List(a,b,c,d,e,f,m,q),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),EqQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),C0),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Sqr(x),Power(e,-1))),p)),x),And(FreeQ(List(a,c,d,e,f,q,m,q),x),EqQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),C0),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Dist(Times(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),FracPart(p)),Power(Times(Power(Plus(d,Times(e,Sqr(x))),FracPart(p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Sqr(x),Power(e,-1))),FracPart(p))),-1)),Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Sqr(x),Power(e,-1))),p)),x),x),And(FreeQ(List(a,b,c,d,e,f,m,p,q),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),EqQ(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),C0),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Dist(Times(Power(Plus(a,Times(c,Power(x,4))),FracPart(p)),Power(Times(Power(Plus(d,Times(e,Sqr(x))),FracPart(p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Sqr(x),Power(e,-1))),FracPart(p))),-1)),Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,p)),Power(Plus(Times(a,Power(d,-1)),Times(c,Sqr(x),Power(e,-1))),p)),x),x),And(FreeQ(List(a,c,d,e,f,m,p,q),x),EqQ(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),C0),Not(IntegerQ(p))))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),p),x,Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1)),-1)),x),Dist(Power(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1)),-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),ExpandToSum(Together(Times(C1,Plus(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1),Power(x,m),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p)),Times(CN1,Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),p),Plus(d,Times(e,Plus(Times(C2,q),C3),Sqr(x))))),Power(Plus(d,Times(e,Sqr(x))),-1))),x)),x),x)),And(FreeQ(List(a,b,c,d,e),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IGtQ(p,C0),ILtQ(q,CN1),IGtQ(Times(C1D2,m),C0)))),
ISetDelayed(Int(Times(Power(x_,m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),p),x,Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1)),-1)),x),Dist(Power(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1)),-1),Int(Times(Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),ExpandToSum(Together(Times(C1,Plus(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1),Power(x,m),Power(Plus(a,Times(c,Power(x,4))),p)),Times(CN1,Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),p),Plus(d,Times(e,Plus(Times(C2,q),C3),Sqr(x))))),Power(Plus(d,Times(e,Sqr(x))),-1))),x)),x),x)),And(FreeQ(List(a,c,d,e),x),IGtQ(p,C0),ILtQ(q,CN1),IGtQ(Times(C1D2,m),C0)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),p),x,Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1)),-1)),x),Dist(Times(Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Times(C2,Power(e,Times(C2,p)),Plus(q,C1)),-1)),Int(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),ExpandToSum(Together(Times(C1,Plus(Times(C2,Power(Negate(d),Plus(Times(CN1,C1D2,m),C1)),Power(e,Times(C2,p)),Plus(q,C1),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p)),Times(CN1,Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),p),Power(Times(Power(e,Times(C1D2,m)),Power(x,m)),-1),Plus(d,Times(e,Plus(Times(C2,q),C3),Sqr(x))))),Power(Plus(d,Times(e,Sqr(x))),-1))),x)),x),x)),And(FreeQ(List(a,b,c,d,e),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IGtQ(p,C0),ILtQ(q,CN1),ILtQ(Times(C1D2,m),C0)))),
ISetDelayed(Int(Times(Power(x_,m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),p),x,Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(C2,Power(e,Plus(Times(C2,p),Times(C1D2,m))),Plus(q,C1)),-1)),x),Dist(Times(Power(Negate(d),Plus(Times(C1D2,m),Negate(C1))),Power(Times(C2,Power(e,Times(C2,p)),Plus(q,C1)),-1)),Int(Times(Power(x,m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),ExpandToSum(Together(Times(C1,Plus(Times(C2,Power(Negate(d),Plus(Times(CN1,C1D2,m),C1)),Power(e,Times(C2,p)),Plus(q,C1),Power(Plus(a,Times(c,Power(x,4))),p)),Times(CN1,Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),p),Power(Times(Power(e,Times(C1D2,m)),Power(x,m)),-1),Plus(d,Times(e,Plus(Times(C2,q),C3),Sqr(x))))),Power(Plus(d,Times(e,Sqr(x))),-1))),x)),x),x)),And(FreeQ(List(a,c,d,e),x),IGtQ(p,C0),ILtQ(q,CN1),ILtQ(Times(C1D2,m),C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p)),x),x),And(FreeQ(List(a,b,c,d,e,f,m,q),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IGtQ(p,C0),IGtQ(q,CN2)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(c,Power(x,4))),p)),x),x),And(FreeQ(List(a,c,d,e,f,m,q),x),IGtQ(p,C0),IGtQ(q,CN2)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(With(List(Set($s("§qx"),PolynomialQuotient(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Plus(d,Times(e,Sqr(x))),x)),Set($s("R"),Coeff(PolynomialRemainder(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Plus(d,Times(e,Sqr(x))),x),x,C0))),Plus(Negate(Simp(Times($s("R"),Power(Times(f,x),Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(C2,d,f,Plus(q,C1)),-1)),x)),Dist(Times(f,Power(Times(C2,d,Plus(q,C1)),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),ExpandToSum(Plus(Times(C2,d,Plus(q,C1),x,$s("§qx")),Times($s("R"),Plus(m,Times(C2,q),C3),x)),x)),x),x))),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IGtQ(p,C0),LtQ(q,CN1),GtQ(m,C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(With(List(Set($s("§qx"),PolynomialQuotient(Power(Plus(a,Times(c,Power(x,4))),p),Plus(d,Times(e,Sqr(x))),x)),Set($s("R"),Coeff(PolynomialRemainder(Power(Plus(a,Times(c,Power(x,4))),p),Plus(d,Times(e,Sqr(x))),x),x,C0))),Plus(Negate(Simp(Times($s("R"),Power(Times(f,x),Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(C2,d,f,Plus(q,C1)),-1)),x)),Dist(Times(f,Power(Times(C2,d,Plus(q,C1)),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),ExpandToSum(Plus(Times(C2,d,Plus(q,C1),x,$s("§qx")),Times($s("R"),Plus(m,Times(C2,q),C3),x)),x)),x),x))),And(FreeQ(List(a,c,d,e,f),x),IGtQ(p,C0),LtQ(q,CN1),GtQ(m,C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(With(List(Set($s("§qx"),PolynomialQuotient(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Times(f,x),x)),Set($s("R"),PolynomialRemainder(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Times(f,x),x))),Plus(Simp(Times($s("R"),Power(Times(f,x),Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(d,f,Plus(m,C1)),-1)),x),Dist(Power(Times(d,Sqr(f),Plus(m,C1)),-1),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),q),ExpandToSum(Plus(Times(d,f,Plus(m,C1),$s("§qx"),Power(x,-1)),Times(CN1,e,$s("R"),Plus(m,Times(C2,q),C3))),x)),x),x))),And(FreeQ(List(a,b,c,d,e,f,q),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IGtQ(p,C0),LtQ(m,CN1)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(With(List(Set($s("§qx"),PolynomialQuotient(Power(Plus(a,Times(c,Power(x,4))),p),Times(f,x),x)),Set($s("R"),PolynomialRemainder(Power(Plus(a,Times(c,Power(x,4))),p),Times(f,x),x))),Plus(Simp(Times($s("R"),Power(Times(f,x),Plus(m,C1)),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(d,f,Plus(m,C1)),-1)),x),Dist(Power(Times(d,Sqr(f),Plus(m,C1)),-1),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),q),ExpandToSum(Plus(Times(d,f,Plus(m,C1),$s("§qx"),Power(x,-1)),Times(CN1,e,$s("R"),Plus(m,Times(C2,q),C3))),x)),x),x))),And(FreeQ(List(a,c,d,e,f,q),x),IGtQ(p,C0),LtQ(m,CN1)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(c,p),Power(Times(f,x),Plus(m,Times(C4,p),Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(e,Power(f,Plus(Times(C4,p),Negate(C1))),Plus(m,Times(C4,p),Times(C2,q),C1)),-1)),x),Dist(Power(Times(e,Plus(m,Times(C4,p),Times(C2,q),C1)),-1),Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),q),ExpandToSum(Plus(Times(e,Plus(m,Times(C4,p),Times(C2,q),C1),Plus(Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Times(CN1,Power(c,p),Power(x,Times(C4,p))))),Times(CN1,d,Power(c,p),Plus(m,Times(C4,p),Negate(C1)),Power(x,Plus(Times(C4,p),Negate(C2))))),x)),x),x)),And(FreeQ(List(a,b,c,d,e,f,m,q),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IGtQ(p,C0),Not(IntegerQ(q)),NeQ(Plus(m,Times(C4,p),Times(C2,q),C1),C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(c,p),Power(Times(f,x),Plus(m,Times(C4,p),Negate(C1))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Power(Times(e,Power(f,Plus(Times(C4,p),Negate(C1))),Plus(m,Times(C4,p),Times(C2,q),C1)),-1)),x),Dist(Power(Times(e,Plus(m,Times(C4,p),Times(C2,q),C1)),-1),Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),q),ExpandToSum(Plus(Times(e,Plus(m,Times(C4,p),Times(C2,q),C1),Plus(Power(Plus(a,Times(c,Power(x,4))),p),Times(CN1,Power(c,p),Power(x,Times(C4,p))))),Times(CN1,d,Power(c,p),Plus(m,Times(C4,p),Negate(C1)),Power(x,Plus(Times(C4,p),Negate(C2))))),x)),x),x)),And(FreeQ(List(a,c,d,e,f,m,q),x),IGtQ(p,C0),Not(IntegerQ(q)),NeQ(Plus(m,Times(C4,p),Times(C2,q),C1),C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(With(List(Set(k,Denominator(m))),Dist(Times(k,Power(f,-1)),Subst(Int(Times(Power(x,Plus(Times(k,Plus(m,C1)),Negate(C1))),Power(Plus(d,Times(e,Power(x,Times(C2,k)),Power(f,-2))),q),Power(Plus(a,Times(b,Power(x,Times(C2,k)),Power(Power(f,k),-1)),Times(c,Power(x,Times(C4,k)),Power(f,-4))),p)),x),x,Power(Times(f,x),Power(k,-1))),x)),And(FreeQ(List(a,b,c,d,e,f,p,q),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),FractionQ(m),IntegerQ(p)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(With(List(Set(k,Denominator(m))),Dist(Times(k,Power(f,-1)),Subst(Int(Times(Power(x,Plus(Times(k,Plus(m,C1)),Negate(C1))),Power(Plus(d,Times(e,Power(x,Times(C2,k)),Power(f,-1))),q),Power(Plus(a,Times(c,Power(x,Times(C4,k)),Power(f,-1))),p)),x),x,Power(Times(f,x),Power(k,-1))),x)),And(FreeQ(List(a,c,d,e,f,p,q),x),FractionQ(m),IntegerQ(p)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Plus(Times(d,Plus(m,Times(C4,p),C3)),Times(e,Plus(m,C1),Sqr(x))),Power(Times(f,Plus(m,C1),Plus(m,Times(C4,p),C3)),-1)),x),Dist(Times(C2,p,Power(Times(Sqr(f),Plus(m,C1),Plus(m,Times(C4,p),C3)),-1)),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,Negate(C1))),Simp(Plus(Times(C2,a,e,Plus(m,C1)),Times(CN1,b,d,Plus(m,Times(C4,p),C3)),Times(Plus(Times(b,e,Plus(m,C1)),Times(CN1,C2,c,d,Plus(m,Times(C4,p),C3))),Sqr(x))),x)),x),x)),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),GtQ(p,C0),LtQ(m,CN1),Unequal(Plus(m,Times(C4,p),C3),C0),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(c,Power(x,4))),p),Plus(Times(d,Plus(m,Times(C4,p),C3)),Times(e,Plus(m,C1),Sqr(x))),Power(Times(f,Plus(m,C1),Plus(m,Times(C4,p),C3)),-1)),x),Dist(Times(C4,p,Power(Times(Sqr(f),Plus(m,C1),Plus(m,Times(C4,p),C3)),-1)),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(a,Times(c,Power(x,4))),Plus(p,Negate(C1))),Plus(Times(a,e,Plus(m,C1)),Times(CN1,c,d,Plus(m,Times(C4,p),C3),Sqr(x)))),x),x)),And(FreeQ(List(a,c,d,e,f),x),GtQ(p,C0),LtQ(m,CN1),Unequal(Plus(m,Times(C4,p),C3),C0),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Plus(Times(b,e,C2,p),Times(c,d,Plus(m,Times(C4,p),C3)),Times(c,e,Plus(Times(C4,p),m,C1),Sqr(x))),Power(Times(c,f,Plus(Times(C4,p),m,C1),Plus(m,Times(C4,p),C3)),-1)),x),Dist(Times(C2,p,Power(Times(c,Plus(Times(C4,p),m,C1),Plus(m,Times(C4,p),C3)),-1)),Int(Times(Power(Times(f,x),m),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,Negate(C1))),Simp(Plus(Times(C2,a,c,d,Plus(m,Times(C4,p),C3)),Times(CN1,a,b,e,Plus(m,C1)),Times(Plus(Times(C2,a,c,e,Plus(Times(C4,p),m,C1)),Times(b,c,d,Plus(m,Times(C4,p),C3)),Times(CN1,Sqr(b),e,Plus(m,Times(C2,p),C1))),Sqr(x))),x)),x),x)),And(FreeQ(List(a,b,c,d,e,f,m),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),GtQ(p,C0),NeQ(Plus(Times(C4,p),m,C1),C0),NeQ(Plus(m,Times(C4,p),C3),C0),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(c,Power(x,4))),p),Plus(Times(c,d,Plus(m,Times(C4,p),C3)),Times(c,e,Plus(Times(C4,p),m,C1),Sqr(x))),Power(Times(c,f,Plus(Times(C4,p),m,C1),Plus(m,Times(C4,p),C3)),-1)),x),Dist(Times(C4,a,p,Power(Times(Plus(Times(C4,p),m,C1),Plus(m,Times(C4,p),C3)),-1)),Int(Times(Power(Times(f,x),m),Power(Plus(a,Times(c,Power(x,4))),Plus(p,Negate(C1))),Simp(Plus(Times(d,Plus(m,Times(C4,p),C3)),Times(e,Plus(Times(C4,p),m,C1),Sqr(x))),x)),x),x)),And(FreeQ(List(a,c,d,e,f,m),x),GtQ(p,C0),NeQ(Plus(Times(C4,p),m,C1),C0),NeQ(Plus(m,Times(C4,p),C3),C0),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(f,Power(Times(f,x),Plus(m,Negate(C1))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,C1)),Plus(Times(b,d),Times(CN1,C2,a,e),Times(CN1,Plus(Times(b,e),Times(CN1,C2,c,d)),Sqr(x))),Power(Times(C2,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),x),Negate(Dist(Times(Sqr(f),Power(Times(C2,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,C1)),Simp(Plus(Times(Plus(m,Negate(C1)),Plus(Times(b,d),Times(CN1,C2,a,e))),Times(CN1,Plus(Times(C4,p),C4,m,C1),Plus(Times(b,e),Times(CN1,C2,c,d)),Sqr(x))),x)),x),x))),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),LtQ(p,CN1),GtQ(m,C1),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_DEFAULT)),x_Symbol),
    Condition(Plus(Simp(Times(f,Power(Times(f,x),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Power(x,4))),Plus(p,C1)),Plus(Times(a,e),Times(CN1,c,d,Sqr(x))),Power(Times(C4,a,c,Plus(p,C1)),-1)),x),Negate(Dist(Times(Sqr(f),Power(Times(C4,a,c,Plus(p,C1)),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(a,Times(c,Power(x,4))),Plus(p,C1)),Plus(Times(a,e,Plus(m,Negate(C1))),Times(CN1,c,d,Plus(Times(C4,p),C4,m,C1),Sqr(x)))),x),x))),And(FreeQ(List(a,c,d,e,f),x),LtQ(p,CN1),GtQ(m,C1),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Plus(Negate(Simp(Times(Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,C1)),Plus(Times(d,Plus(Sqr(b),Times(CN1,C2,a,c))),Times(CN1,a,b,e),Times(Plus(Times(b,d),Times(CN1,C2,a,e)),c,Sqr(x))),Power(Times(C2,a,f,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1)),x)),Dist(Power(Times(C2,a,Plus(p,C1),Plus(Sqr(b),Times(CN1,C4,a,c))),-1),Int(Times(Power(Times(f,x),m),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,C1)),Simp(Plus(Times(d,Plus(Times(Sqr(b),Plus(m,Times(C2,Plus(p,C1)),C1)),Times(CN1,C2,a,c,Plus(m,Times(C4,Plus(p,C1)),C1)))),Times(CN1,a,b,e,Plus(m,C1)),Times(c,Plus(m,Times(C2,Plus(Times(C2,p),C3)),C1),Plus(Times(b,d),Times(CN1,C2,a,e)),Sqr(x))),x)),x),x)),And(FreeQ(List(a,b,c,d,e,f,m),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),LtQ(p,CN1),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Plus(Negate(Simp(Times(Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(c,Power(x,4))),Plus(p,C1)),Plus(d,Times(e,Sqr(x))),Power(Times(C4,a,f,Plus(p,C1)),-1)),x)),Dist(Power(Times(C4,a,Plus(p,C1)),-1),Int(Times(Power(Times(f,x),m),Power(Plus(a,Times(c,Power(x,4))),Plus(p,C1)),Simp(Plus(Times(d,Plus(m,Times(C4,Plus(p,C1)),C1)),Times(e,Plus(m,Times(C2,Plus(Times(C2,p),C3)),C1),Sqr(x))),x)),x),x)),And(FreeQ(List(a,c,d,e,f,m),x),LtQ(p,CN1),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Plus(Simp(Times(e,f,Power(Times(f,x),Plus(m,Negate(C1))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,C1)),Power(Times(c,Plus(m,Times(C4,p),C3)),-1)),x),Negate(Dist(Times(Sqr(f),Power(Times(c,Plus(m,Times(C4,p),C3)),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Simp(Plus(Times(a,e,Plus(m,Negate(C1))),Times(Plus(Times(b,e,Plus(m,Times(C2,p),C1)),Times(CN1,c,d,Plus(m,Times(C4,p),C3))),Sqr(x))),x)),x),x))),And(FreeQ(List(a,b,c,d,e,f,p),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),GtQ(m,C1),NeQ(Plus(m,Times(C4,p),C3),C0),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Plus(Simp(Times(e,f,Power(Times(f,x),Plus(m,Negate(C1))),Power(Plus(a,Times(c,Power(x,4))),Plus(p,C1)),Power(Times(c,Plus(m,Times(C4,p),C3)),-1)),x),Negate(Dist(Times(Sqr(f),Power(Times(c,Plus(m,Times(C4,p),C3)),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(a,Times(c,Power(x,4))),p),Plus(Times(a,e,Plus(m,Negate(C1))),Times(CN1,c,d,Plus(m,Times(C4,p),C3),Sqr(x)))),x),x))),And(FreeQ(List(a,c,d,e,f,p),x),GtQ(m,C1),NeQ(Plus(m,Times(C4,p),C3),C0),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Plus(Simp(Times(d,Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),Plus(p,C1)),Power(Times(a,f,Plus(m,C1)),-1)),x),Dist(Power(Times(a,Sqr(f),Plus(m,C1)),-1),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),p),Simp(Plus(Times(a,e,Plus(m,C1)),Times(CN1,b,d,Plus(m,Times(C2,p),C3)),Times(CN1,c,d,Plus(m,Times(C4,p),C5),Sqr(x))),x)),x),x)),And(FreeQ(List(a,b,c,d,e,f,p),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),LtQ(m,CN1),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),p_)),x_Symbol),
    Condition(Plus(Simp(Times(d,Power(Times(f,x),Plus(m,C1)),Power(Plus(a,Times(c,Power(x,4))),Plus(p,C1)),Power(Times(a,f,Plus(m,C1)),-1)),x),Dist(Power(Times(a,Sqr(f),Plus(m,C1)),-1),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(a,Times(c,Power(x,4))),p),Plus(Times(a,e,Plus(m,C1)),Times(CN1,c,d,Plus(m,Times(C4,p),C5),Sqr(x)))),x),x)),And(FreeQ(List(a,c,d,e,f,p),x),LtQ(m,CN1),IntegerQ(Times(C2,p)),Or(IntegerQ(p),IntegerQ(m))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(With(List(Set(r,Rt(Times(c,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(e,-1)),C2))),Plus(Dist(Times(C1D2,e),Int(Times(Power(Times(f,x),m),Power(Plus(Times(c,d,Power(e,-1)),Times(CN1,r,x),Times(c,Sqr(x))),-1)),x),x),Dist(Times(C1D2,e),Int(Times(Power(Times(f,x),m),Power(Plus(Times(c,d,Power(e,-1)),Times(r,x),Times(c,Sqr(x))),-1)),x),x))),And(FreeQ(List(a,b,c,d,e,f,m),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),EqQ(Plus(Times(c,Sqr(d)),Times(CN1,a,Sqr(e))),C0),GtQ(Times(d,Power(e,-1)),C0),PosQ(Times(c,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(e,-1)))))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(With(List(Set(r,Rt(Times(C2,Sqr(c),d,Power(e,-1)),C2))),Plus(Dist(Times(C1D2,e),Int(Times(Power(Times(f,x),m),Power(Plus(Times(c,d,Power(e,-1)),Times(CN1,r,x),Times(c,Sqr(x))),-1)),x),x),Dist(Times(C1D2,e),Int(Times(Power(Times(f,x),m),Power(Plus(Times(c,d,Power(e,-1)),Times(r,x),Times(c,Sqr(x))),-1)),x),x))),And(FreeQ(List(a,c,d,e,f,m),x),EqQ(Plus(Times(c,Sqr(d)),Times(CN1,a,Sqr(e))),C0),GtQ(Times(d,Power(e,-1)),C0)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(With(List(Set(q,Rt(Plus(Sqr(b),Times(CN1,C4,a,c)),C2))),Plus(Dist(Plus(Times(C1D2,e),Times(Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(C2,q),-1))),Int(Times(Power(Times(f,x),m),Power(Plus(Times(C1D2,b),Times(CN1,C1D2,q),Times(c,Sqr(x))),-1)),x),x),Dist(Plus(Times(C1D2,e),Times(CN1,Plus(Times(C2,c,d),Times(CN1,b,e)),Power(Times(C2,q),-1))),Int(Times(Power(Times(f,x),m),Power(Plus(Times(C1D2,b),Times(C1D2,q),Times(c,Sqr(x))),-1)),x),x))),And(FreeQ(List(a,b,c,d,e,f,m),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0)))),
ISetDelayed(Int(Times(Plus(d_,Times(e_DEFAULT,Sqr(x_))),Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(With(List(Set(q,Rt(Times(CN1,a,c),C2))),Plus(Negate(Dist(Plus(Times(C1D2,e),Times(c,d,Power(Times(C2,q),-1))),Int(Times(Power(Times(f,x),m),Power(Plus(q,Times(CN1,c,Sqr(x))),-1)),x),x)),Dist(Plus(Times(C1D2,e),Times(CN1,c,d,Power(Times(C2,q),-1))),Int(Times(Power(Times(f,x),m),Power(Plus(q,Times(c,Sqr(x))),-1)),x),x))),FreeQ(List(a,c,d,e,f,m),x))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x),And(FreeQ(List(a,b,c,d,e,f,m),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IntegerQ(q),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Int(ExpandIntegrand(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x),And(FreeQ(List(a,c,d,e,f,m),x),IntegerQ(q),IntegerQ(m)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Times(f,x),m),Times(Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x),And(FreeQ(List(a,b,c,d,e,f,m),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),IntegerQ(q),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_,Times(e_DEFAULT,Sqr(x_))),q_DEFAULT),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Int(ExpandIntegrand(Power(Times(f,x),m),Times(Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x),And(FreeQ(List(a,c,d,e,f,m),x),IntegerQ(q),Not(IntegerQ(m))))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(Power(f,4),Power(c,-2)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Plus(Times(c,d),Times(CN1,b,e),Times(c,e,Sqr(x))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1)))),x),x),Negate(Dist(Times(Power(f,4),Power(c,-2)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1))),Simp(Plus(Times(a,Plus(Times(c,d),Times(CN1,b,e))),Times(Plus(Times(b,c,d),Times(CN1,Sqr(b),e),Times(a,c,e)),Sqr(x))),x),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),Not(IntegerQ(q)),GtQ(q,C0),GtQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(Power(f,4),Power(c,-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),q)),x),x),Negate(Dist(Times(a,Power(f,4),Power(c,-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),q),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,c,d,e,f,q),x),Not(IntegerQ(q)),GtQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(e,Sqr(f),Power(c,-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1)))),x),x),Negate(Dist(Times(Sqr(f),Power(c,-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1))),Simp(Plus(Times(a,e),Times(CN1,Plus(Times(c,d),Times(CN1,b,e)),Sqr(x))),x),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),Not(IntegerQ(q)),GtQ(q,C0),GtQ(m,C1),LeQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(e,Sqr(f),Power(c,-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1)))),x),x),Negate(Dist(Times(Sqr(f),Power(c,-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1))),Simp(Plus(Times(a,e),Times(CN1,c,d,Sqr(x))),x),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,c,d,e,f),x),Not(IntegerQ(q)),GtQ(q,C0),GtQ(m,C1),LeQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(d,Power(a,-1)),Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1)))),x),x),Negate(Dist(Power(Times(a,Sqr(f)),-1),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1))),Simp(Plus(Times(b,d),Times(CN1,a,e),Times(c,d,Sqr(x))),x),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),Not(IntegerQ(q)),GtQ(q,C0),LtQ(m,C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(d,Power(a,-1)),Int(Times(Power(Times(f,x),m),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1)))),x),x),Dist(Power(Times(a,Sqr(f)),-1),Int(Times(Power(Times(f,x),Plus(m,C2)),Power(Plus(d,Times(e,Sqr(x))),Plus(q,Negate(C1))),Simp(Plus(Times(a,e),Times(CN1,c,d,Sqr(x))),x),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x)),And(FreeQ(List(a,c,d,e,f),x),Not(IntegerQ(q)),GtQ(q,C0),LtQ(m,C0)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(Sqr(d),Power(f,4),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),q)),x),x),Negate(Dist(Times(Power(f,4),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Simp(Plus(Times(a,d),Times(Plus(Times(b,d),Times(CN1,a,e)),Sqr(x))),x),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),Not(IntegerQ(q)),LtQ(q,CN1),GtQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Dist(Times(Sqr(d),Power(f,4),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),q)),x),x),Negate(Dist(Times(a,Power(f,4),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C4))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Plus(d,Times(CN1,e,Sqr(x))),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x))),And(FreeQ(List(a,c,d,e,f),x),Not(IntegerQ(q)),LtQ(q,CN1),GtQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(b_DEFAULT,Sqr(x_)),Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Negate(Dist(Times(d,e,Sqr(f),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),q)),x),x)),Dist(Times(Sqr(f),Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Simp(Plus(Times(a,e),Times(c,d,Sqr(x))),x),Power(Plus(a,Times(b,Sqr(x)),Times(c,Power(x,4))),-1)),x),x)),And(FreeQ(List(a,b,c,d,e,f),x),NeQ(Plus(Sqr(b),Times(CN1,C4,a,c)),C0),Not(IntegerQ(q)),LtQ(q,CN1),GtQ(m,C1),LeQ(m,C3)))),
ISetDelayed(Int(Times(Power(Times(f_DEFAULT,x_),m_DEFAULT),Power(Plus(d_DEFAULT,Times(e_DEFAULT,Sqr(x_))),q_),Power(Plus(a_,Times(c_DEFAULT,Power(x_,4))),-1)),x_Symbol),
    Condition(Plus(Negate(Dist(Times(d,e,Sqr(f),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),q)),x),x)),Dist(Times(Sqr(f),Power(Plus(Times(c,Sqr(d)),Times(a,Sqr(e))),-1)),Int(Times(Power(Times(f,x),Plus(m,Negate(C2))),Power(Plus(d,Times(e,Sqr(x))),Plus(q,C1)),Simp(Plus(Times(a,e),Times(c,d,Sqr(x))),x),Power(Plus(a,Times(c,Power(x,4))),-1)),x),x)),And(FreeQ(List(a,c,d,e,f),x),Not(IntegerQ(q)),LtQ(q,CN1),GtQ(m,C1),LeQ(m,C3))))
  );
}
