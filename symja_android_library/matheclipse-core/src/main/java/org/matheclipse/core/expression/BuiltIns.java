package org.matheclipse.core.expression;

import org.matheclipse.core.interfaces.IBuiltInSymbol;

public enum BuiltIns {
	Abort( "abort", 0 ), //
	Abs( "abs", 1 ), //
	AbsArg( "absarg", 2 ), //
	Accumulate( "accumulate", 3 ), //
	AddTo( "addto", 4 ), //
	AlgebraicNumber( "algebraicnumber", 5 ), //
	Algebraics( "algebraics", 6 ), //
	All( "all", 7 ), //
	AllTrue( "alltrue", 8 ), //
	Alternatives( "alternatives", 9 ), //
	And( "and", 10 ), //
	AngleVector( "anglevector", 11 ), //
	AntihermitianMatrixQ( "antihermitianmatrixq", 12 ), //
	AntisymmetricMatrixQ( "antisymmetricmatrixq", 13 ), //
	AnyTrue( "anytrue", 14 ), //
	Apart( "apart", 15 ), //
	AppellF1( "appellf1", 16 ), //
	Append( "append", 17 ), //
	AppendTo( "appendto", 18 ), //
	Apply( "apply", 19 ), //
	ArcCos( "arccos", 20 ), //
	ArcCosh( "arccosh", 21 ), //
	ArcCot( "arccot", 22 ), //
	ArcCoth( "arccoth", 23 ), //
	ArcCsc( "arccsc", 24 ), //
	ArcCsch( "arccsch", 25 ), //
	ArcSec( "arcsec", 26 ), //
	ArcSech( "arcsech", 27 ), //
	ArcSin( "arcsin", 28 ), //
	ArcSinh( "arcsinh", 29 ), //
	ArcTan( "arctan", 30 ), //
	ArcTanh( "arctanh", 31 ), //
	Arg( "arg", 32 ), //
	Array( "array", 33 ), //
	ArrayDepth( "arraydepth", 34 ), //
	ArrayPad( "arraypad", 35 ), //
	ArrayQ( "arrayq", 36 ), //
	Assumptions( "assumptions", 37 ), //
	AtomQ( "atomq", 38 ), //
	Attributes( "attributes", 39 ), //
	Automatic( "automatic", 40 ), //
	Axes( "axes", 41 ), //
	AxesOrigin( "axesorigin", 42 ), //
	AxesStyle( "axesstyle", 43 ), //
	Background( "background", 44 ), //
	Begin( "begin", 45 ), //
	BeginPackage( "beginpackage", 46 ), //
	BellB( "bellb", 47 ), //
	BellY( "belly", 48 ), //
	BernoulliB( "bernoullib", 49 ), //
	BernoulliDistribution( "bernoullidistribution", 50 ), //
	BesselI( "besseli", 51 ), //
	BesselJ( "besselj", 52 ), //
	BesselK( "besselk", 53 ), //
	BesselY( "bessely", 54 ), //
	Beta( "beta", 55 ), //
	BetaRegularized( "betaregularized", 56 ), //
	BinCounts( "bincounts", 57 ), //
	Binomial( "binomial", 58 ), //
	BinomialDistribution( "binomialdistribution", 59 ), //
	BitLength( "bitlength", 60 ), //
	Blank( "blank", 61 ), //
	Block( "block", 62 ), //
	Boole( "boole", 63 ), //
	BooleanConvert( "booleanconvert", 64 ), //
	BooleanMinimize( "booleanminimize", 65 ), //
	BooleanQ( "booleanq", 66 ), //
	BooleanTable( "booleantable", 67 ), //
	BooleanVariables( "booleanvariables", 68 ), //
	Booleans( "booleans", 69 ), //
	BrayCurtisDistance( "braycurtisdistance", 70 ), //
	Break( "break", 71 ), //
	CDF( "cdf", 72 ), //
	CanberraDistance( "canberradistance", 73 ), //
	Cancel( "cancel", 74 ), //
	CarmichaelLambda( "carmichaellambda", 75 ), //
	CartesianProduct( "cartesianproduct", 76 ), //
	Cases( "cases", 77 ), //
	Catalan( "catalan", 78 ), //
	CatalanNumber( "catalannumber", 79 ), //
	Catch( "catch", 80 ), //
	Catenate( "catenate", 81 ), //
	Ceiling( "ceiling", 82 ), //
	CentralMoment( "centralmoment", 83 ), //
	CharacterEncoding( "characterencoding", 84 ), //
	CharacteristicPolynomial( "characteristicpolynomial", 85 ), //
	ChebyshevT( "chebyshevt", 86 ), //
	ChebyshevU( "chebyshevu", 87 ), //
	ChessboardDistance( "chessboarddistance", 88 ), //
	ChineseRemainder( "chineseremainder", 89 ), //
	CholeskyDecomposition( "choleskydecomposition", 90 ), //
	Chop( "chop", 91 ), //
	CirclePoints( "circlepoints", 92 ), //
	Clear( "clear", 93 ), //
	ClearAll( "clearall", 94 ), //
	ClearAttributes( "clearattributes", 95 ), //
	Clip( "clip", 96 ), //
	Coefficient( "coefficient", 97 ), //
	CoefficientList( "coefficientlist", 98 ), //
	CoefficientRules( "coefficientrules", 99 ), //
	Collect( "collect", 100 ), //
	Colon( "colon", 101 ), //
	Commonest( "commonest", 102 ), //
	Compile( "compile", 103 ), //
	Complement( "complement", 104 ), //
	Complex( "complex", 105 ), //
	ComplexExpand( "complexexpand", 106 ), //
	ComplexInfinity( "complexinfinity", 107 ), //
	Complexes( "complexes", 108 ), //
	ComplexityFunction( "complexityfunction", 109 ), //
	ComposeList( "composelist", 110 ), //
	ComposeSeries( "composeseries", 111 ), //
	Composition( "composition", 112 ), //
	CompoundExpression( "compoundexpression", 113 ), //
	Condition( "condition", 114 ), //
	ConditionalExpression( "conditionalexpression", 115 ), //
	Conjugate( "conjugate", 116 ), //
	ConjugateTranspose( "conjugatetranspose", 117 ), //
	Constant( "constant", 118 ), //
	ConstantArray( "constantarray", 119 ), //
	Continue( "continue", 120 ), //
	ContinuedFraction( "continuedfraction", 121 ), //
	ConvexHullMesh( "convexhullmesh", 122 ), //
	CoprimeQ( "coprimeq", 123 ), //
	Correlation( "correlation", 124 ), //
	Cos( "cos", 125 ), //
	CosIntegral( "cosintegral", 126 ), //
	Cosh( "cosh", 127 ), //
	CoshIntegral( "coshintegral", 128 ), //
	CosineDistance( "cosinedistance", 129 ), //
	Cot( "cot", 130 ), //
	Coth( "coth", 131 ), //
	Count( "count", 132 ), //
	Covariance( "covariance", 133 ), //
	Cross( "cross", 134 ), //
	Csc( "csc", 135 ), //
	Csch( "csch", 136 ), //
	CubeRoot( "cuberoot", 137 ), //
	Curl( "curl", 138 ), //
	D( "D", 139 ), //
	DSolve( "dsolve", 140 ), //
	Decrement( "decrement", 141 ), //
	Default( "default", 142 ), //
	Defer( "defer", 143 ), //
	Definition( "definition", 144 ), //
	Degree( "degree", 145 ), //
	Delete( "delete", 146 ), //
	DeleteCases( "deletecases", 147 ), //
	DeleteDuplicates( "deleteduplicates", 148 ), //
	Denominator( "denominator", 149 ), //
	Depth( "depth", 150 ), //
	Derivative( "derivative", 151 ), //
	DesignMatrix( "designmatrix", 152 ), //
	Det( "det", 153 ), //
	Diagonal( "diagonal", 154 ), //
	DiagonalMatrix( "diagonalmatrix", 155 ), //
	DiceDissimilarity( "dicedissimilarity", 156 ), //
	DigitQ( "digitq", 157 ), //
	Dimensions( "dimensions", 158 ), //
	DiracDelta( "diracdelta", 159 ), //
	DirectedInfinity( "directedinfinity", 160 ), //
	Direction( "direction", 161 ), //
	DiscreteDelta( "discretedelta", 162 ), //
	DiscreteUniformDistribution( "discreteuniformdistribution", 163 ), //
	Discriminant( "discriminant", 164 ), //
	Disputed( "disputed", 165 ), //
	Distribute( "distribute", 166 ), //
	Divergence( "divergence", 167 ), //
	Divide( "divide", 168 ), //
	DivideBy( "divideby", 169 ), //
	Divisible( "divisible", 170 ), //
	DivisorSigma( "divisorsigma", 171 ), //
	Divisors( "divisors", 172 ), //
	Do( "do", 173 ), //
	Dot( "dot", 174 ), //
	Drop( "drop", 175 ), //
	E( "E", 176 ), //
	EasterSunday( "eastersunday", 177 ), //
	Eigenvalues( "eigenvalues", 178 ), //
	Eigenvectors( "eigenvectors", 179 ), //
	Element( "element", 180 ), //
	ElementData( "elementdata", 181 ), //
	Eliminate( "eliminate", 182 ), //
	EllipticE( "elliptice", 183 ), //
	EllipticF( "ellipticf", 184 ), //
	EllipticK( "elliptick", 185 ), //
	EllipticPi( "ellipticpi", 186 ), //
	End( "end", 187 ), //
	EndPackage( "endpackage", 188 ), //
	Equal( "equal", 189 ), //
	Equivalent( "equivalent", 190 ), //
	Erf( "erf", 191 ), //
	Erfc( "erfc", 192 ), //
	Erfi( "erfi", 193 ), //
	ErlangDistribution( "erlangdistribution", 194 ), //
	EuclideanDistance( "euclideandistance", 195 ), //
	EulerE( "eulere", 196 ), //
	EulerGamma( "eulergamma", 197 ), //
	EulerPhi( "eulerphi", 198 ), //
	EvenQ( "evenq", 199 ), //
	ExactNumberQ( "exactnumberq", 200 ), //
	Except( "except", 201 ), //
	Exists( "exists", 202 ), //
	Exp( "exp", 203 ), //
	ExpIntegralE( "expintegrale", 204 ), //
	ExpIntegralEi( "expintegralei", 205 ), //
	Expand( "expand", 206 ), //
	ExpandAll( "expandall", 207 ), //
	Expectation( "expectation", 208 ), //
	Exponent( "exponent", 209 ), //
	ExponentialDistribution( "exponentialdistribution", 210 ), //
	Export( "export", 211 ), //
	ExtendedGCD( "extendedgcd", 212 ), //
	Extract( "extract", 213 ), //
	Factor( "factor", 214 ), //
	FactorInteger( "factorinteger", 215 ), //
	FactorSquareFree( "factorsquarefree", 216 ), //
	FactorSquareFreeList( "factorsquarefreelist", 217 ), //
	FactorTerms( "factorterms", 218 ), //
	Factorial( "factorial", 219 ), //
	Factorial2( "factorial2", 220 ), //
	False( "false", 221 ), //
	Fibonacci( "fibonacci", 222 ), //
	FindInstance( "findinstance", 223 ), //
	FindRoot( "findroot", 224 ), //
	First( "first", 225 ), //
	Fit( "fit", 226 ), //
	FixedPoint( "fixedpoint", 227 ), //
	FixedPointList( "fixedpointlist", 228 ), //
	Flat( "flat", 229 ), //
	Flatten( "flatten", 230 ), //
	FlattenAt( "flattenat", 231 ), //
	Floor( "floor", 232 ), //
	Fold( "fold", 233 ), //
	FoldList( "foldlist", 234 ), //
	For( "for", 235 ), //
	ForAll( "forall", 236 ), //
	FourierMatrix( "fouriermatrix", 237 ), //
	FractionalPart( "fractionalpart", 238 ), //
	FrechetDistribution( "frechetdistribution", 239 ), //
	FreeQ( "freeq", 240 ), //
	FresnelC( "fresnelc", 241 ), //
	FresnelS( "fresnels", 242 ), //
	FrobeniusSolve( "frobeniussolve", 243 ), //
	FromCharacterCode( "fromcharactercode", 244 ), //
	FromContinuedFraction( "fromcontinuedfraction", 245 ), //
	FromPolarCoordinates( "frompolarcoordinates", 246 ), //
	FullForm( "fullform", 247 ), //
	FullSimplify( "fullsimplify", 248 ), //
	Function( "function", 249 ), //
	GCD( "gcd", 250 ), //
	Gamma( "gamma", 251 ), //
	GammaDistribution( "gammadistribution", 252 ), //
	GammaRegularized( "gammaregularized", 253 ), //
	Gather( "gather", 254 ), //
	GegenbauerC( "gegenbauerc", 255 ), //
	GeometricDistribution( "geometricdistribution", 256 ), //
	GeometricMean( "geometricmean", 257 ), //
	Get( "get", 258 ), //
	Glaisher( "glaisher", 259 ), //
	GoldenRatio( "goldenratio", 260 ), //
	Graphics( "graphics", 261 ), //
	Graphics3D( "graphics3d", 262 ), //
	Greater( "greater", 263 ), //
	GreaterEqual( "greaterequal", 264 ), //
	GroebnerBasis( "groebnerbasis", 265 ), //
	GumbelDistribution( "gumbeldistribution", 266 ), //
	HarmonicNumber( "harmonicnumber", 267 ), //
	Haversine( "haversine", 268 ), //
	Head( "head", 269 ), //
	HeavisideTheta( "heavisidetheta", 270 ), //
	HermiteH( "hermiteh", 271 ), //
	HermitianMatrixQ( "hermitianmatrixq", 272 ), //
	HilbertMatrix( "hilbertmatrix", 273 ), //
	Hold( "hold", 274 ), //
	HoldAll( "holdall", 275 ), //
	HoldFirst( "holdfirst", 276 ), //
	HoldForm( "holdform", 277 ), //
	HoldPattern( "holdpattern", 278 ), //
	HoldRest( "holdrest", 279 ), //
	Horner( "horner", 280 ), //
	HornerForm( "hornerform", 281 ), //
	HurwitzZeta( "hurwitzzeta", 282 ), //
	Hypergeometric1F1( "hypergeometric1f1", 283 ), //
	Hypergeometric2F1( "hypergeometric2f1", 284 ), //
	HypergeometricDistribution( "hypergeometricdistribution", 285 ), //
	HypergeometricPFQ( "hypergeometricpfq", 286 ), //
	HypergeometricPFQRegularized( "hypergeometricpfqregularized", 287 ), //
	I( "I", 288 ), //
	Identity( "identity", 289 ), //
	IdentityMatrix( "identitymatrix", 290 ), //
	If( "if", 291 ), //
	Im( "im", 292 ), //
	Implies( "implies", 293 ), //
	Import( "import", 294 ), //
	Increment( "increment", 295 ), //
	Indeterminate( "indeterminate", 296 ), //
	Inequality( "inequality", 297 ), //
	InexactNumberQ( "inexactnumberq", 298 ), //
	Infinity( "infinity", 299 ), //
	Information( "information", 300 ), //
	Inner( "inner", 301 ), //
	Insert( "insert", 302 ), //
	Integer( "integer", 303 ), //
	IntegerExponent( "integerexponent", 304 ), //
	IntegerLength( "integerlength", 305 ), //
	IntegerPart( "integerpart", 306 ), //
	IntegerPartitions( "integerpartitions", 307 ), //
	IntegerQ( "integerq", 308 ), //
	Integers( "integers", 309 ), //
	Integrate( "integrate", 310 ), //
	InterpolatingFunction( "interpolatingfunction", 311 ), //
	InterpolatingPolynomial( "interpolatingpolynomial", 312 ), //
	Interpolation( "interpolation", 313 ), //
	Intersection( "intersection", 314 ), //
	Interval( "interval", 315 ), //
	Inverse( "inverse", 316 ), //
	InverseBetaRegularized( "inversebetaregularized", 317 ), //
	InverseErf( "inverseerf", 318 ), //
	InverseErfc( "inverseerfc", 319 ), //
	InverseFunction( "inversefunction", 320 ), //
	InverseGammaRegularized( "inversegammaregularized", 321 ), //
	InverseHaversine( "inversehaversine", 322 ), //
	InverseLaplaceTransform( "inverselaplacetransform", 323 ), //
	InverseSeries( "inverseseries", 324 ), //
	JaccardDissimilarity( "jaccarddissimilarity", 325 ), //
	JacobiMatrix( "jacobimatrix", 326 ), //
	JacobiSymbol( "jacobisymbol", 327 ), //
	JacobiZeta( "jacobizeta", 328 ), //
	JavaForm( "javaform", 329 ), //
	Join( "join", 330 ), //
	KOrderlessPartitions( "korderlesspartitions", 331 ), //
	KPartitions( "kpartitions", 332 ), //
	Khinchin( "khinchin", 333 ), //
	KroneckerDelta( "kroneckerdelta", 334 ), //
	Kurtosis( "kurtosis", 335 ), //
	LCM( "lcm", 336 ), //
	LUDecomposition( "ludecomposition", 337 ), //
	LaguerreL( "laguerrel", 338 ), //
	LaplaceTransform( "laplacetransform", 339 ), //
	Last( "last", 340 ), //
	LeafCount( "leafcount", 341 ), //
	LeastSquares( "leastsquares", 342 ), //
	LegendreP( "legendrep", 343 ), //
	LegendreQ( "legendreq", 344 ), //
	Length( "length", 345 ), //
	Less( "less", 346 ), //
	LessEqual( "lessequal", 347 ), //
	LetterQ( "letterq", 348 ), //
	Level( "level", 349 ), //
	LevelQ( "levelq", 350 ), //
	Limit( "limit", 351 ), //
	Line( "line", 352 ), //
	LinearModelFit( "linearmodelfit", 353 ), //
	LinearProgramming( "linearprogramming", 354 ), //
	LinearSolve( "linearsolve", 355 ), //
	LiouvilleLambda( "liouvillelambda", 356 ), //
	List( "list", 357 ), //
	ListConvolve( "listconvolve", 358 ), //
	ListCorrelate( "listcorrelate", 359 ), //
	ListQ( "listq", 360 ), //
	Listable( "listable", 361 ), //
	Literal( "literal", 362 ), //
	Log( "log", 363 ), //
	Log10( "log10", 364 ), //
	Log2( "log2", 365 ), //
	LogGamma( "loggamma", 366 ), //
	LogIntegral( "logintegral", 367 ), //
	LogNormalDistribution( "lognormaldistribution", 368 ), //
	LogicalExpand( "logicalexpand", 369 ), //
	LogisticSigmoid( "logisticsigmoid", 370 ), //
	LowerCaseQ( "lowercaseq", 371 ), //
	LowerTriangularize( "lowertriangularize", 372 ), //
	LucasL( "lucasl", 373 ), //
	MachineNumberQ( "machinenumberq", 374 ), //
	MangoldtLambda( "mangoldtlambda", 375 ), //
	ManhattanDistance( "manhattandistance", 376 ), //
	MantissaExponent( "mantissaexponent", 377 ), //
	Map( "map", 378 ), //
	MapAll( "mapall", 379 ), //
	MapAt( "mapat", 380 ), //
	MapThread( "mapthread", 381 ), //
	MatchQ( "matchq", 382 ), //
	MatchingDissimilarity( "matchingdissimilarity", 383 ), //
	MathMLForm( "mathmlform", 384 ), //
	MatrixForm( "matrixform", 385 ), //
	MatrixMinimalPolynomial( "matrixminimalpolynomial", 386 ), //
	MatrixPower( "matrixpower", 387 ), //
	MatrixQ( "matrixq", 388 ), //
	MatrixRank( "matrixrank", 389 ), //
	Max( "max", 390 ), //
	MaxIterations( "maxiterations", 391 ), //
	MaxPoints( "maxpoints", 392 ), //
	Mean( "mean", 393 ), //
	MeanDeviation( "meandeviation", 394 ), //
	Median( "median", 395 ), //
	MeijerG( "meijerg", 396 ), //
	MemberQ( "memberq", 397 ), //
	MersennePrimeExponent( "mersenneprimeexponent", 398 ), //
	MersennePrimeExponentQ( "mersenneprimeexponentq", 399 ), //
	MeshRange( "meshrange", 400 ), //
	MessageName( "messagename", 401 ), //
	Method( "method", 402 ), //
	Min( "min", 403 ), //
	MinimalPolynomial( "minimalpolynomial", 404 ), //
	Minus( "minus", 405 ), //
	Missing( "missing", 406 ), //
	MissingQ( "missingq", 407 ), //
	Mod( "mod", 408 ), //
	Module( "module", 409 ), //
	Modulus( "modulus", 410 ), //
	MoebiusMu( "moebiusmu", 411 ), //
	MonomialList( "monomiallist", 412 ), //
	Most( "most", 413 ), //
	Multinomial( "multinomial", 414 ), //
	MultiplicativeOrder( "multiplicativeorder", 415 ), //
	N( "N", 416 ), //
	NDSolve( "ndsolve", 417 ), //
	NFourierTransform( "nfouriertransform", 418 ), //
	NHoldAll( "nholdall", 419 ), //
	NHoldFirst( "nholdfirst", 420 ), //
	NHoldRest( "nholdrest", 421 ), //
	NIntegrate( "nintegrate", 422 ), //
	NMaximize( "nmaximize", 423 ), //
	NMinimize( "nminimize", 424 ), //
	NRoots( "nroots", 425 ), //
	NSolve( "nsolve", 426 ), //
	NakagamiDistribution( "nakagamidistribution", 427 ), //
	Names( "names", 428 ), //
	Nand( "nand", 429 ), //
	Nearest( "nearest", 430 ), //
	Negative( "negative", 431 ), //
	Nest( "nest", 432 ), //
	NestList( "nestlist", 433 ), //
	NestWhile( "nestwhile", 434 ), //
	NestWhileList( "nestwhilelist", 435 ), //
	NextPrime( "nextprime", 436 ), //
	NonCommutativeMultiply( "noncommutativemultiply", 437 ), //
	NonNegative( "nonnegative", 438 ), //
	NonPositive( "nonpositive", 439 ), //
	None( "none", 440 ), //
	NoneTrue( "nonetrue", 441 ), //
	Nonexistent( "nonexistent", 442 ), //
	Nor( "nor", 443 ), //
	Norm( "norm", 444 ), //
	Normal( "normal", 445 ), //
	NormalDistribution( "normaldistribution", 446 ), //
	Normalize( "normalize", 447 ), //
	Not( "not", 448 ), //
	NotApplicable( "notapplicable", 449 ), //
	NotAvailable( "notavailable", 450 ), //
	NotListQ( "notlistq", 451 ), //
	Null( "null", 452 ), //
	NullSpace( "nullspace", 453 ), //
	NumberFieldRootsOfUnity( "numberfieldrootsofunity", 454 ), //
	NumberQ( "numberq", 455 ), //
	Numerator( "numerator", 456 ), //
	NumericFunction( "numericfunction", 457 ), //
	NumericQ( "numericq", 458 ), //
	O( "O", 459 ), //
	OddQ( "oddq", 460 ), //
	OneIdentity( "oneidentity", 461 ), //
	Operate( "operate", 462 ), //
	Optional( "optional", 463 ), //
	Options( "options", 464 ), //
	Or( "or", 465 ), //
	Order( "order", 466 ), //
	OrderedQ( "orderedq", 467 ), //
	Ordering( "ordering", 468 ), //
	Orderless( "orderless", 469 ), //
	OrthogonalMatrixQ( "orthogonalmatrixq", 470 ), //
	Orthogonalize( "orthogonalize", 471 ), //
	Out( "out", 472 ), //
	Outer( "outer", 473 ), //
	PDF( "pdf", 474 ), //
	Package( "package", 475 ), //
	PadLeft( "padleft", 476 ), //
	PadRight( "padright", 477 ), //
	ParametricPlot( "parametricplot", 478 ), //
	Part( "part", 479 ), //
	Partition( "partition", 480 ), //
	PartitionsP( "partitionsp", 481 ), //
	PartitionsQ( "partitionsq", 482 ), //
	Pattern( "pattern", 483 ), //
	PatternTest( "patterntest", 484 ), //
	PerfectNumber( "perfectnumber", 485 ), //
	PerfectNumberQ( "perfectnumberq", 486 ), //
	Permutations( "permutations", 487 ), //
	Pi( "pi", 488 ), //
	Piecewise( "piecewise", 489 ), //
	Plot( "plot", 490 ), //
	Plot3D( "plot3d", 491 ), //
	PlotRange( "plotrange", 492 ), //
	Plus( "plus", 493 ), //
	Pochhammer( "pochhammer", 494 ), //
	Point( "point", 495 ), //
	PoissonDistribution( "poissondistribution", 496 ), //
	PolyGamma( "polygamma", 497 ), //
	PolyLog( "polylog", 498 ), //
	Polygon( "polygon", 499 ), //
	PolynomialExtendedGCD( "polynomialextendedgcd", 500 ), //
	PolynomialGCD( "polynomialgcd", 501 ), //
	PolynomialLCM( "polynomiallcm", 502 ), //
	PolynomialQ( "polynomialq", 503 ), //
	PolynomialQuotient( "polynomialquotient", 504 ), //
	PolynomialQuotientRemainder( "polynomialquotientremainder", 505 ), //
	PolynomialRemainder( "polynomialremainder", 506 ), //
	Position( "position", 507 ), //
	Positive( "positive", 508 ), //
	PossibleZeroQ( "possiblezeroq", 509 ), //
	Power( "power", 510 ), //
	PowerExpand( "powerexpand", 511 ), //
	PowerMod( "powermod", 512 ), //
	PreDecrement( "predecrement", 513 ), //
	PreIncrement( "preincrement", 514 ), //
	PrePlus( "preplus", 515 ), //
	Precision( "precision", 516 ), //
	PrecisionGoal( "precisiongoal", 517 ), //
	Prepend( "prepend", 518 ), //
	PrependTo( "prependto", 519 ), //
	Prime( "prime", 520 ), //
	PrimeOmega( "primeomega", 521 ), //
	PrimePi( "primepi", 522 ), //
	PrimePowerQ( "primepowerq", 523 ), //
	PrimeQ( "primeq", 524 ), //
	Primes( "primes", 525 ), //
	PrimitiveRootList( "primitiverootlist", 526 ), //
	Print( "print", 527 ), //
	Product( "product", 528 ), //
	ProductLog( "productlog", 529 ), //
	Projection( "projection", 530 ), //
	PseudoInverse( "pseudoinverse", 531 ), //
	Put( "put", 532 ), //
	QRDecomposition( "qrdecomposition", 533 ), //
	Quantile( "quantile", 534 ), //
	Quiet( "quiet", 535 ), //
	Quit( "quit", 536 ), //
	Quotient( "quotient", 537 ), //
	QuotientRemainder( "quotientremainder", 538 ), //
	RandomChoice( "randomchoice", 539 ), //
	RandomInteger( "randominteger", 540 ), //
	RandomReal( "randomreal", 541 ), //
	RandomSample( "randomsample", 542 ), //
	RandomVariate( "randomvariate", 543 ), //
	Range( "range", 544 ), //
	Rational( "rational", 545 ), //
	Rationalize( "rationalize", 546 ), //
	Rationals( "rationals", 547 ), //
	Re( "re", 548 ), //
	Real( "real", 549 ), //
	RealNumberQ( "realnumberq", 550 ), //
	Reals( "reals", 551 ), //
	Reap( "reap", 552 ), //
	Rectangle( "rectangle", 553 ), //
	Reduce( "reduce", 554 ), //
	Refine( "refine", 555 ), //
	Repeated( "repeated", 556 ), //
	RepeatedNull( "repeatednull", 557 ), //
	Replace( "replace", 558 ), //
	ReplaceAll( "replaceall", 559 ), //
	ReplaceList( "replacelist", 560 ), //
	ReplacePart( "replacepart", 561 ), //
	ReplaceRepeated( "replacerepeated", 562 ), //
	Rest( "rest", 563 ), //
	Resultant( "resultant", 564 ), //
	Return( "return", 565 ), //
	Reverse( "reverse", 566 ), //
	Riffle( "riffle", 567 ), //
	RogersTanimotoDissimilarity( "rogerstanimotodissimilarity", 568 ), //
	Root( "root", 569 ), //
	RootIntervals( "rootintervals", 570 ), //
	RootOf( "rootof", 571 ), //
	Roots( "roots", 572 ), //
	RotateLeft( "rotateleft", 573 ), //
	RotateRight( "rotateright", 574 ), //
	Round( "round", 575 ), //
	RowReduce( "rowreduce", 576 ), //
	Rule( "rule", 577 ), //
	RuleDelayed( "ruledelayed", 578 ), //
	RussellRaoDissimilarity( "russellraodissimilarity", 579 ), //
	SameQ( "sameq", 580 ), //
	SatisfiabilityCount( "satisfiabilitycount", 581 ), //
	SatisfiabilityInstances( "satisfiabilityinstances", 582 ), //
	SatisfiableQ( "satisfiableq", 583 ), //
	Scan( "scan", 584 ), //
	Sec( "sec", 585 ), //
	Sech( "sech", 586 ), //
	Second( "second", 587 ), //
	Select( "select", 588 ), //
	Sequence( "sequence", 589 ), //
	Series( "series", 590 ), //
	SeriesCoefficient( "seriescoefficient", 591 ), //
	SeriesData( "seriesdata", 592 ), //
	Set( "set", 593 ), //
	SetAttributes( "setattributes", 594 ), //
	SetDelayed( "setdelayed", 595 ), //
	Share( "share", 596 ), //
	Show( "show", 597 ), //
	Sign( "sign", 598 ), //
	SignCmp( "signcmp", 599 ), //
	Simplify( "simplify", 600 ), //
	Sin( "sin", 601 ), //
	SinIntegral( "sinintegral", 602 ), //
	Sinc( "sinc", 603 ), //
	SingularValueDecomposition( "singularvaluedecomposition", 604 ), //
	Sinh( "sinh", 605 ), //
	SinhIntegral( "sinhintegral", 606 ), //
	Skewness( "skewness", 607 ), //
	Slot( "slot", 608 ), //
	SlotSequence( "slotsequence", 609 ), //
	SokalSneathDissimilarity( "sokalsneathdissimilarity", 610 ), //
	Solve( "solve", 611 ), //
	Sort( "sort", 612 ), //
	Sow( "sow", 613 ), //
	Span( "span", 614 ), //
	Split( "split", 615 ), //
	SplitBy( "splitby", 616 ), //
	Sqrt( "sqrt", 617 ), //
	SquareFreeQ( "squarefreeq", 618 ), //
	SquaredEuclideanDistance( "squaredeuclideandistance", 619 ), //
	StandardDeviation( "standarddeviation", 620 ), //
	Standardize( "standardize", 621 ), //
	StieltjesGamma( "stieltjesgamma", 622 ), //
	StirlingS1( "stirlings1", 623 ), //
	StirlingS2( "stirlings2", 624 ), //
	String( "string", 625 ), //
	StringDrop( "stringdrop", 626 ), //
	StringJoin( "stringjoin", 627 ), //
	StringLength( "stringlength", 628 ), //
	StringTake( "stringtake", 629 ), //
	StruveH( "struveh", 630 ), //
	StruveL( "struvel", 631 ), //
	StudentTDistribution( "studenttdistribution", 632 ), //
	Subfactorial( "subfactorial", 633 ), //
	Subscript( "subscript", 634 ), //
	Subsets( "subsets", 635 ), //
	Subsuperscript( "subsuperscript", 636 ), //
	Subtract( "subtract", 637 ), //
	SubtractFrom( "subtractfrom", 638 ), //
	Sum( "sum", 639 ), //
	Superscript( "superscript", 640 ), //
	Surd( "surd", 641 ), //
	SurfaceGraphics( "surfacegraphics", 642 ), //
	Switch( "switch", 643 ), //
	Symbol( "symbol", 644 ), //
	SymbolName( "symbolname", 645 ), //
	SymbolQ( "symbolq", 646 ), //
	SymmetricMatrixQ( "symmetricmatrixq", 647 ), //
	SyntaxLength( "syntaxlength", 648 ), //
	SyntaxQ( "syntaxq", 649 ), //
	Table( "table", 650 ), //
	Take( "take", 651 ), //
	Tally( "tally", 652 ), //
	Tan( "tan", 653 ), //
	Tanh( "tanh", 654 ), //
	TautologyQ( "tautologyq", 655 ), //
	Taylor( "taylor", 656 ), //
	TeXForm( "texform", 657 ), //
	TensorDimensions( "tensordimensions", 658 ), //
	TensorProduct( "tensorproduct", 659 ), //
	TensorRank( "tensorrank", 660 ), //
	Thread( "thread", 661 ), //
	Through( "through", 662 ), //
	Throw( "throw", 663 ), //
	TimeConstrained( "timeconstrained", 664 ), //
	Times( "times", 665 ), //
	TimesBy( "timesby", 666 ), //
	Timing( "timing", 667 ), //
	ToCharacterCode( "tocharactercode", 668 ), //
	ToPolarCoordinates( "topolarcoordinates", 669 ), //
	ToRadicals( "toradicals", 670 ), //
	ToString( "tostring", 671 ), //
	ToUnicode( "tounicode", 672 ), //
	ToeplitzMatrix( "toeplitzmatrix", 673 ), //
	Together( "together", 674 ), //
	TooLarge( "toolarge", 675 ), //
	Total( "total", 676 ), //
	Tr( "tr", 677 ), //
	Trace( "trace", 678 ), //
	Transpose( "transpose", 679 ), //
	Trig( "trig", 680 ), //
	TrigExpand( "trigexpand", 681 ), //
	TrigReduce( "trigreduce", 682 ), //
	TrigToExp( "trigtoexp", 683 ), //
	True( "true", 684 ), //
	TrueQ( "trueq", 685 ), //
	Tuples( "tuples", 686 ), //
	Undefined( "undefined", 687 ), //
	Unequal( "unequal", 688 ), //
	Unevaluated( "unevaluated", 689 ), //
	Union( "union", 690 ), //
	Unique( "unique", 691 ), //
	UnitStep( "unitstep", 692 ), //
	UnitVector( "unitvector", 693 ), //
	UnitaryMatrixQ( "unitarymatrixq", 694 ), //
	Unitize( "unitize", 695 ), //
	Unknown( "unknown", 696 ), //
	UnsameQ( "unsameq", 697 ), //
	Unset( "unset", 698 ), //
	UpSet( "upset", 699 ), //
	UpSetDelayed( "upsetdelayed", 700 ), //
	UpperCaseQ( "uppercaseq", 701 ), //
	UpperTriangularize( "uppertriangularize", 702 ), //
	ValueQ( "valueq", 703 ), //
	VandermondeMatrix( "vandermondematrix", 704 ), //
	Variable( "variable", 705 ), //
	Variables( "variables", 706 ), //
	Variance( "variance", 707 ), //
	VectorAngle( "vectorangle", 708 ), //
	VectorQ( "vectorq", 709 ), //
	WeibullDistribution( "weibulldistribution", 710 ), //
	Which( "which", 711 ), //
	While( "while", 712 ), //
	White( "white", 713 ), //
	With( "with", 714 ), //
	Xor( "xor", 715 ), //
	YuleDissimilarity( "yuledissimilarity", 716 ), //
	Zeta( "zeta", 717 );

	private final String name;
	private final int symbolID;
	private final static IBuiltInSymbol[] builtInSymbols = new IBuiltInSymbol[values().length];

	public static IBuiltInSymbol valueOf(BuiltIns sEnum) {
		IBuiltInSymbol symbol = F.initFinalSymbol(sEnum);
		builtInSymbols[sEnum.symbolID] = symbol;
		return symbol;
	}

	BuiltIns(String name, int symbolID) {
		this.name = name;
		this.symbolID = symbolID;
	}

	public static IBuiltInSymbol symbol(int id) {
		return builtInSymbols[id];
	}

	public final int id() {
		return symbolID;
	}

	public final String str() {
		return name;
	}
}