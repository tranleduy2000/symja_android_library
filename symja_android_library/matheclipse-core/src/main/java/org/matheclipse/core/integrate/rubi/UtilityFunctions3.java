package org.matheclipse.core.integrate.rubi;


import static org.matheclipse.core.expression.F.*;
import static org.matheclipse.core.integrate.rubi.UtilityFunctionCtors.*;

import org.matheclipse.core.interfaces.IAST;
/** 
 * UtilityFunctions rules from the <a href="http://www.apmaths.uwo.ca/~arich/">Rubi -
 * rule-based integrator</a>.
 *  
 */
public class UtilityFunctions3 { 
  public static IAST RULES = List( 
ISetDelayed(4307,FixSimplify(Times(Power(u_,m_DEFAULT),Power(v_,n_),w_DEFAULT)),
    Condition(With(List(Set(z,Simplify(Times(Power(u,Times(m,Power(GCD(m,Negate(n)),-1))),Power(v,Times(n,Power(GCD(m,Negate(n)),-1))))))),Condition(FixSimplify(Times(w,Power(z,GCD(m,Negate(n))))),Or(AbsurdNumberQ(z),SqrtNumberSumQ(z)))),And(RationalQ(m),FractionQ(n),SqrtNumberSumQ(u),SqrtNumberSumQ(Power(v,-1)),GtQ(u,C0),GtQ(v,C0)))),
ISetDelayed(4308,FixSimplify(Times(Power(u_,m_DEFAULT),Power(v_,n_),w_DEFAULT)),
    Condition(With(List(Set(z,Simplify(Times(Power(Negate(u),Times(m,Power(GCD(m,n),-1))),Power(v,Times(n,Power(GCD(m,n),-1))))))),Condition(FixSimplify(Times(CN1,w,Power(z,GCD(m,n)))),Or(AbsurdNumberQ(z),SqrtNumberSumQ(z)))),And(IntegerQ(m),FractionQ(n),SqrtNumberSumQ(u),SqrtNumberSumQ(v),LtQ(u,C0),GtQ(v,C0)))),
ISetDelayed(4309,FixSimplify(Times(Power(u_,m_DEFAULT),Power(v_,n_),w_DEFAULT)),
    Condition(With(List(Set(z,Simplify(Times(Power(Negate(u),Times(m,Power(GCD(m,Negate(n)),-1))),Power(v,Times(n,Power(GCD(m,Negate(n)),-1))))))),Condition(FixSimplify(Times(CN1,w,Power(z,GCD(m,Negate(n))))),Or(AbsurdNumberQ(z),SqrtNumberSumQ(z)))),And(IntegerQ(m),FractionQ(n),SqrtNumberSumQ(u),SqrtNumberSumQ(Power(v,-1)),LtQ(u,C0),GtQ(v,C0)))),
ISetDelayed(4310,FixSimplify(Times(Power(a_,m_),Power(Plus(u_,Times(Power(b_,n_),v_DEFAULT)),p_DEFAULT),w_DEFAULT)),
    Condition(With(List(Set(c,Simplify(Times(Power(a,Times(m,Power(p,-1))),Power(b,n))))),Condition(FixSimplify(Times(w,Power(Plus(Times(Power(a,Times(m,Power(p,-1))),u),Times(c,v)),p))),RationalQ(c))),And(RationalQ(a,b,m,n),Greater(a,C0),Greater(b,C0),IGtQ(p,C0)))),
ISetDelayed(4311,FixSimplify(Times(Power(a_,m_DEFAULT),Plus(Times(Power(a_,n_),u_DEFAULT),Times(Power(b_,p_DEFAULT),v_DEFAULT)),w_DEFAULT)),
    Condition(With(List(Set(z,Times(w,Power(a,Plus(m,n)),Plus(u,Times(Power(CN1,p),Power(a,Plus(p,Negate(n))),v))))),Condition(FixSimplify(z),Not(MatchQ(z,Condition(Times($p("ww",true),Power($p("aa"),$p("mm")),Plus($p("uu"),Times(Power($p("bb"),$p("nn")),$p("vv",true)))),And(RationalQ($s("aa"),$s("bb"),$s("mm"),$s("nn")),Greater($s("aa"),C0),Greater($s("bb"),C0),RationalQ(Simplify(Times(Power($s("aa"),$s("mm")),Power($s("bb"),$s("nn"))))))))))),And(RationalQ(m),FractionQ(n),IntegerQ(p),Greater(Plus(p,Negate(n)),C0),SameQ(Plus(a,b),C0)))),
ISetDelayed(4312,FixSimplify(Times(Power(Plus(a_,b_),m_DEFAULT),Power(Plus(c_,d_),n_),w_DEFAULT)),
    Condition(With(List(Set(q,Simplify(Times(b,Power(d,-1))))),Condition(FixSimplify(Times(w,Power(q,m),Power(Plus(c,d),Plus(m,n)))),FreeQ(q,Plus))),And(IntegerQ(m),Not(IntegerQ(n)),EqQ(Plus(Times(b,c),Times(CN1,a,d)),C0)))),
ISetDelayed(4313,FixSimplify(Times(Power(Plus(Times(Power(a_,m_DEFAULT),u_DEFAULT),Times(Power(a_,n_DEFAULT),v_DEFAULT)),t_DEFAULT),w_DEFAULT)),
    Condition(FixSimplify(Times(Power(a,Times(m,t)),w,Power(Plus(u,Times(Power(a,Plus(n,Negate(m))),v)),t))),And(Not(RationalQ(a)),IntegerQ(t),RationalQ(m,n),And(Less(C0,m),LessEqual(m,n))))),
ISetDelayed(4314,FixSimplify(Times(w_DEFAULT,Power(Plus(Times(Power(a_,m_DEFAULT),u_DEFAULT),Times(Power(a_,n_DEFAULT),v_DEFAULT),Times(Power(a_,p_DEFAULT),z_DEFAULT)),t_DEFAULT))),
    Condition(FixSimplify(Times(Power(a,Times(m,t)),w,Power(Plus(u,Times(Power(a,Plus(n,Negate(m))),v),Times(Power(a,Plus(p,Negate(m))),z)),t))),And(Not(RationalQ(a)),IntegerQ(t),RationalQ(m,n,p),And(Less(C0,m),LessEqual(m,n,p))))),
ISetDelayed(4315,FixSimplify(Times(w_DEFAULT,Power(Plus(Times(Power(a_,m_DEFAULT),u_DEFAULT),Times(Power(a_,n_DEFAULT),v_DEFAULT),Times(Power(a_,q_DEFAULT),y_DEFAULT),Times(Power(a_,p_DEFAULT),z_DEFAULT)),t_DEFAULT))),
    Condition(FixSimplify(Times(Power(a,Times(m,t)),w,Power(Plus(u,Times(Power(a,Plus(n,Negate(m))),v),Times(Power(a,Plus(p,Negate(m))),z),Times(Power(a,Plus(q,Negate(m))),y)),t))),And(Not(RationalQ(a)),IntegerQ(t),RationalQ(m,n,p),And(Less(C0,m),LessEqual(m,n,p,q))))),
ISetDelayed(4316,FixSimplify(Times(Plus(u_DEFAULT,Times(b_DEFAULT,Sqrt(v_)),Times(c_DEFAULT,Sqrt(v_)),Times(d_DEFAULT,Sqrt(v_)),Times(a_DEFAULT,Sqrt($p(v,Plus)))),w_DEFAULT)),
    FixSimplify(Times(w,Plus(u,Times(FixSimplify(Plus(a,b,c,d)),Sqrt(v)))))),
ISetDelayed(4317,FixSimplify(Times(Plus(u_DEFAULT,Times(b_DEFAULT,Sqrt(v_)),Times(c_DEFAULT,Sqrt(v_)),Times(a_DEFAULT,Sqrt($p(v,Plus)))),w_DEFAULT)),
    FixSimplify(Times(w,Plus(u,Times(FixSimplify(Plus(a,b,c)),Sqrt(v)))))),
ISetDelayed(4318,FixSimplify(Times(Plus(u_DEFAULT,Times(b_DEFAULT,Sqrt(v_)),Times(a_DEFAULT,Sqrt($p(v,Plus)))),w_DEFAULT)),
    FixSimplify(Times(w,Plus(u,Times(FixSimplify(Plus(a,b)),Sqrt(v)))))),
ISetDelayed(4319,FixSimplify(Times(u_DEFAULT,Power(v_,m_),Power(w_,n_))),
    Condition(Negate(FixSimplify(Times(u,Power(v,Plus(m,Negate(C1)))))),And(RationalQ(m),Not(RationalQ(w)),FractionQ(n),Less(n,C0),EqQ(Plus(v,Power(w,Negate(n))),C0)))),
ISetDelayed(4320,FixSimplify(Times(u_DEFAULT,Power(v_,m_),Power(w_,n_DEFAULT))),
    Condition(Times(Power(CN1,n),FixSimplify(Times(u,Power(v,Plus(m,n))))),And(RationalQ(m),Not(RationalQ(w)),IntegerQ(n),EqQ(Plus(v,w),C0)))),
ISetDelayed(4321,FixSimplify(Times(u_DEFAULT,Power(Negate(Power(v_,p_DEFAULT)),m_),Power(w_,n_DEFAULT))),
    Condition(Times(Power(CN1,Times(n,Power(p,-1))),FixSimplify(Times(u,Power(Negate(Power(v,p)),Plus(m,Times(n,Power(p,-1))))))),And(RationalQ(m),Not(RationalQ(w)),IntegerQ(Times(n,Power(p,-1))),EqQ(Plus(v,Negate(w)),C0)))),
ISetDelayed(4322,FixSimplify(Times(u_DEFAULT,Power(Negate(Power(v_,p_DEFAULT)),m_),Power(w_,n_DEFAULT))),
    Condition(Times(Power(CN1,Plus(n,Times(n,Power(p,-1)))),FixSimplify(Times(u,Power(Negate(Power(v,p)),Plus(m,Times(n,Power(p,-1))))))),And(RationalQ(m),Not(RationalQ(w)),IntegersQ(n,Times(n,Power(p,-1))),EqQ(Plus(v,w),C0)))),
ISetDelayed(4323,FixSimplify(Times(Power(Plus(a_,Negate(b_)),m_DEFAULT),Power(Plus(a_,b_),m_DEFAULT),u_DEFAULT)),
    Condition(Times(u,Power(Plus(Sqr(a),Negate(Sqr(b))),m)),And(IntegerQ(m),AtomQ(a),AtomQ(b)))),
ISetDelayed(4324,FixSimplify(Times(Power(Plus(Times(c_Symbol,Sqr(d_Symbol)),Times(CN1,e_Symbol,Plus(Times(b_Symbol,d_Symbol),Times(CN1,a_Symbol,e_Symbol)))),m_DEFAULT),u_DEFAULT)),
    Condition(Times(u,Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),m)),And(RationalQ(m),OrderedQ(List(a,b,c,d,e))))),
ISetDelayed(4325,FixSimplify(Times(Power(Plus(Times(c_Symbol,Sqr(d_Symbol)),Times(e_Symbol,Plus(Times(CN1,b_Symbol,d_Symbol),Times(a_Symbol,e_Symbol)))),m_DEFAULT),u_DEFAULT)),
    Condition(Times(u,Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),m)),And(RationalQ(m),OrderedQ(List(a,b,c,d,e))))),
ISetDelayed(4326,FixSimplify(Times(Power(Plus(Times(CN1,c_Symbol,Sqr(d_Symbol)),Times(e_Symbol,Plus(Times(b_Symbol,d_Symbol),Times(CN1,a_Symbol,e_Symbol)))),m_DEFAULT),u_DEFAULT)),
    Condition(Times(Power(CN1,m),u,Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),m)),And(IntegerQ(m),OrderedQ(List(a,b,c,d,e))))),
ISetDelayed(4327,FixSimplify(Times(Power(Plus(Times(CN1,c_Symbol,Sqr(d_Symbol)),Times(CN1,e_Symbol,Plus(Times(CN1,b_Symbol,d_Symbol),Times(a_Symbol,e_Symbol)))),m_DEFAULT),u_DEFAULT)),
    Condition(Times(Power(CN1,m),u,Power(Plus(Times(c,Sqr(d)),Times(CN1,b,d,e),Times(a,Sqr(e))),m)),And(RationalQ(m),OrderedQ(List(a,b,c,d,e))))),
ISetDelayed(4328,FixSimplify(u_),
    u),
ISetDelayed(4329,SimpFixFactor(Power(Plus(Times(a_DEFAULT,Complex(C0,c_)),Times(b_DEFAULT,Complex(C0,d_))),p_DEFAULT),x_),
    Condition(Times(Power(CI,p),SimpFixFactor(Power(Plus(Times(a,c),Times(b,d)),p),x)),IntegerQ(p))),
ISetDelayed(4330,SimpFixFactor(Power(Plus(Times(a_DEFAULT,Complex(C0,d_)),Times(b_DEFAULT,Complex(C0,e_)),Times(c_DEFAULT,Complex(C0,f_))),p_DEFAULT),x_),
    Condition(Times(Power(CI,p),SimpFixFactor(Power(Plus(Times(a,d),Times(b,e),Times(c,f)),p),x)),IntegerQ(p))),
ISetDelayed(4331,SimpFixFactor(Power(Plus(Times(a_DEFAULT,Power(c_,r_)),Times(b_DEFAULT,Power(x_,n_DEFAULT))),p_DEFAULT),x_),
    Condition(Times(Power(c,Times(r,p)),SimpFixFactor(Power(Plus(a,Times(b,Power(Power(c,r),-1),Power(x,n))),p),x)),And(FreeQ(List(a,b,c),x),IntegersQ(n,p),AtomQ(c),RationalQ(r),Less(r,C0)))),
ISetDelayed(4332,SimpFixFactor(Power(Plus(a_DEFAULT,Times(b_DEFAULT,Power(c_,r_),Power(x_,n_DEFAULT))),p_DEFAULT),x_),
    Condition(Times(Power(c,Times(r,p)),SimpFixFactor(Power(Plus(Times(a,Power(Power(c,r),-1)),Times(b,Power(x,n))),p),x)),And(FreeQ(List(a,b,c),x),IntegersQ(n,p),AtomQ(c),RationalQ(r),Less(r,C0)))),
ISetDelayed(4333,SimpFixFactor(Power(Plus(Times(a_DEFAULT,Power(c_,s_DEFAULT)),Times(b_DEFAULT,Power(c_,r_DEFAULT),Power(x_,n_DEFAULT))),p_DEFAULT),x_),
    Condition(Times(Power(c,Times(s,p)),SimpFixFactor(Power(Plus(a,Times(b,Power(c,Plus(r,Negate(s))),Power(x,n))),p),x)),And(FreeQ(List(a,b,c),x),IntegersQ(n,p),RationalQ(s,r),And(Less(C0,s),LessEqual(s,r)),UnsameQ(Power(c,Times(s,p)),CN1)))),
ISetDelayed(4334,SimpFixFactor(Power(Plus(Times(a_DEFAULT,Power(c_,s_DEFAULT)),Times(b_DEFAULT,Power(c_,r_DEFAULT),Power(x_,n_DEFAULT))),p_DEFAULT),x_),
    Condition(Times(Power(c,Times(r,p)),SimpFixFactor(Power(Plus(Times(a,Power(c,Plus(s,Negate(r)))),Times(b,Power(x,n))),p),x)),And(FreeQ(List(a,b,c),x),IntegersQ(n,p),RationalQ(s,r),Less(C0,r,s),UnsameQ(Power(c,Times(r,p)),CN1)))),
ISetDelayed(4335,SimpFixFactor(u_,x_),
    u),
ISetDelayed(4336,FactorNumericGcd(u_),
    If(And(PowerQ(u),RationalQ(Part(u,C2))),Power(FactorNumericGcd(Part(u,C1)),Part(u,C2)),If(ProductQ(u),Map($rubi("Integrate::FactorNumericGcd"),u),If(SumQ(u),With(List(Set(g,Apply($s("GCD"),Map($rubi("Integrate::NumericFactor"),Apply($s("List"),u))))),Times(g,Map(Function(Times(Slot1,Power(g,-1))),u))),u)))),
ISetDelayed(4337,MergeFactors(u_,v_),
    If(ProductQ(u),MergeFactors(Rest(u),MergeFactors(First(u),v)),If(PowerQ(u),If(MergeableFactorQ(Part(u,C1),Part(u,C2),v),MergeFactor(Part(u,C1),Part(u,C2),v),If(And(RationalQ(Part(u,C2)),Less(Part(u,C2),CN1),MergeableFactorQ(Part(u,C1),CN1,v)),MergeFactors(Power(Part(u,C1),Plus(Part(u,C2),C1)),MergeFactor(Part(u,C1),CN1,v)),Times(u,v))),If(MergeableFactorQ(u,C1,v),MergeFactor(u,C1,v),Times(u,v))))),
ISetDelayed(4338,MergeFactor($p("bas"),$p("deg"),v_),
    If(SameQ($s("bas"),v),Power($s("bas"),Plus($s("deg"),C1)),If(PowerQ(v),If(SameQ($s("bas"),Part(v,C1)),Power($s("bas"),Plus($s("deg"),Part(v,C2))),Power(MergeFactor($s("bas"),Times($s("deg"),Power(Part(v,C2),-1)),Part(v,C1)),Part(v,C2))),If(ProductQ(v),If(MergeableFactorQ($s("bas"),$s("deg"),First(v)),Times(MergeFactor($s("bas"),$s("deg"),First(v)),Rest(v)),Times(First(v),MergeFactor($s("bas"),$s("deg"),Rest(v)))),Plus(MergeFactor($s("bas"),$s("deg"),First(v)),MergeFactor($s("bas"),$s("deg"),Rest(v))))))),
ISetDelayed(4339,MergeableFactorQ($p("bas"),$p("deg"),v_),
    If(SameQ($s("bas"),v),And(RationalQ(Plus($s("deg"),C1)),Or(GreaterEqual(Plus($s("deg"),C1),C0),And(RationalQ($s("deg")),Greater($s("deg"),C0)))),If(PowerQ(v),If(SameQ($s("bas"),Part(v,C1)),And(RationalQ(Plus($s("deg"),Part(v,C2))),Or(GreaterEqual(Plus($s("deg"),Part(v,C2)),C0),And(RationalQ($s("deg")),Greater($s("deg"),C0)))),And(SumQ(Part(v,C1)),IntegerQ(Part(v,C2)),Or(Not(IntegerQ($s("deg"))),IntegerQ(Times($s("deg"),Power(Part(v,C2),-1)))),MergeableFactorQ($s("bas"),Times($s("deg"),Power(Part(v,C2),-1)),Part(v,C1)))),If(ProductQ(v),Or(MergeableFactorQ($s("bas"),$s("deg"),First(v)),MergeableFactorQ($s("bas"),$s("deg"),Rest(v))),And(SumQ(v),MergeableFactorQ($s("bas"),$s("deg"),First(v)),MergeableFactorQ($s("bas"),$s("deg"),Rest(v))))))),
ISetDelayed(4340,TrigSimplifyQ(u_),
    UnsameQ(ActivateTrig(u),TrigSimplify(u))),
ISetDelayed(4341,TrigSimplify(u_),
    ActivateTrig(TrigSimplifyRecur(u))),
ISetDelayed(4342,TrigSimplifyRecur(u_),
    If(AtomQ(u),u,If(SameQ(Head(u),$s("If")),u,TrigSimplifyAux(Map($rubi("Integrate::TrigSimplifyRecur"),u))))),
ISetDelayed(4343,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(a_DEFAULT,Power(v_,m_DEFAULT)),Times(b_DEFAULT,Power(v_,n_DEFAULT))),p_))),
    Condition(Times(u,Power(v,Times(m,p)),Power(TrigSimplifyAux(Plus(a,Times(b,Power(v,Plus(n,Negate(m)))))),p)),And(InertTrigQ(v),IntegerQ(p),RationalQ(m,n),Less(m,n)))),
ISetDelayed(4344,TrigSimplifyAux(Plus(v_DEFAULT,Times(a_DEFAULT,Sqr($($s("§cos"),u_))),Times(b_DEFAULT,Sqr($($s("§sin"),u_))))),
    Condition(Plus(a,v),SameQ(a,b))),
ISetDelayed(4345,TrigSimplifyAux(Plus(v_DEFAULT,Times(a_DEFAULT,Sqr($($s("§sec"),u_))),Times(b_DEFAULT,Sqr($($s("§tan"),u_))))),
    Condition(Plus(a,v),SameQ(a,Negate(b)))),
ISetDelayed(4346,TrigSimplifyAux(Plus(v_DEFAULT,Times(b_DEFAULT,Sqr($($s("§cot"),u_))),Times(a_DEFAULT,Sqr($($s("§csc"),u_))))),
    Condition(Plus(a,v),SameQ(a,Negate(b)))),
ISetDelayed(4347,TrigSimplifyAux(Power(Plus(v_DEFAULT,Times(a_DEFAULT,Sqr($($s("§cos"),u_))),Times(b_DEFAULT,Sqr($($s("§sin"),u_)))),n_)),
    Power(Plus(Times(Plus(b,Negate(a)),Sqr(Sin(u))),a,v),n)),
ISetDelayed(4348,TrigSimplifyAux(Plus(u_,w_DEFAULT,Times(v_DEFAULT,Sqr($($s("§sin"),z_))))),
    Condition(Plus(Times(u,Sqr(Cos(z))),w),SameQ(u,Negate(v)))),
ISetDelayed(4349,TrigSimplifyAux(Plus(u_,w_DEFAULT,Times(v_DEFAULT,Sqr($($s("§cos"),z_))))),
    Condition(Plus(Times(u,Sqr(Sin(z))),w),SameQ(u,Negate(v)))),
ISetDelayed(4350,TrigSimplifyAux(Plus(u_,w_DEFAULT,Times(v_DEFAULT,Sqr($($s("§tan"),z_))))),
    Condition(Plus(Times(u,Sqr(Sec(z))),w),SameQ(u,v))),
ISetDelayed(4351,TrigSimplifyAux(Plus(u_,w_DEFAULT,Times(v_DEFAULT,Sqr($($s("§cot"),z_))))),
    Condition(Plus(Times(u,Sqr(Csc(z))),w),SameQ(u,v))),
ISetDelayed(4352,TrigSimplifyAux(Plus(u_,w_DEFAULT,Times(v_DEFAULT,Sqr($($s("§sec"),z_))))),
    Condition(Plus(Times(v,Sqr(Tan(z))),w),SameQ(u,Negate(v)))),
ISetDelayed(4353,TrigSimplifyAux(Plus(u_,w_DEFAULT,Times(v_DEFAULT,Sqr($($s("§csc"),z_))))),
    Condition(Plus(Times(v,Sqr(Cot(z))),w),SameQ(u,Negate(v)))),
ISetDelayed(4354,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(a_,Times(b_DEFAULT,$($s("§cos"),v_))),-1),Sqr($($s("§sin"),v_)))),
    Condition(Times(u,Plus(Power(a,-1),Times(CN1,Cos(v),Power(b,-1)))),EqQ(Plus(Sqr(a),Negate(Sqr(b))),C0))),
ISetDelayed(4355,TrigSimplifyAux(Times(u_DEFAULT,Sqr($($s("§cos"),v_)),Power(Plus(a_,Times(b_DEFAULT,$($s("§sin"),v_))),-1))),
    Condition(Times(u,Plus(Power(a,-1),Times(CN1,Sin(v),Power(b,-1)))),EqQ(Plus(Sqr(a),Negate(Sqr(b))),C0))),
ISetDelayed(4356,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT))),-1))),
    Condition(Times(u,Power(Plus(b,Times(a,Power(Cot(v),n))),-1)),And(IGtQ(n,C0),NonsumQ(a)))),
ISetDelayed(4357,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT))),-1))),
    Condition(Times(u,Power(Plus(b,Times(a,Power(Tan(v),n))),-1)),And(IGtQ(n,C0),NonsumQ(a)))),
ISetDelayed(4358,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§sec"),v_),n_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Power($($s("§sec"),v_),n_DEFAULT))),-1))),
    Condition(Times(u,Power(Plus(b,Times(a,Power(Cos(v),n))),-1)),And(IGtQ(n,C0),NonsumQ(a)))),
ISetDelayed(4359,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§csc"),v_),n_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Power($($s("§csc"),v_),n_DEFAULT))),-1))),
    Condition(Times(u,Power(Plus(b,Times(a,Power(Sin(v),n))),-1)),And(IGtQ(n,C0),NonsumQ(a)))),
ISetDelayed(4360,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(a_,Times(b_DEFAULT,Power($($s("§sec"),v_),n_DEFAULT))),-1),Power($($s("§tan"),v_),n_DEFAULT))),
    Condition(Times(u,Power(Sin(v),n),Power(Plus(b,Times(a,Power(Cos(v),n))),-1)),And(IGtQ(n,C0),NonsumQ(a)))),
ISetDelayed(4361,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT),Power(Plus(a_,Times(b_DEFAULT,Power($($s("§csc"),v_),n_DEFAULT))),-1))),
    Condition(Times(u,Power(Cos(v),n),Power(Plus(b,Times(a,Power(Sin(v),n))),-1)),And(IGtQ(n,C0),NonsumQ(a)))),
ISetDelayed(4362,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(a_DEFAULT,Power($($s("§sec"),v_),n_DEFAULT)),Times(b_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Sec(v),Times(n,p)),Power(Plus(a,Times(b,Power(Sin(v),n))),p)),IntegersQ(n,p))),
ISetDelayed(4363,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(b_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT)),Times(a_DEFAULT,Power($($s("§csc"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Csc(v),Times(n,p)),Power(Plus(a,Times(b,Power(Cos(v),n))),p)),IntegersQ(n,p))),
ISetDelayed(4364,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(b_DEFAULT,Power($($s("§sin"),v_),n_DEFAULT)),Times(a_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Tan(v),Times(n,p)),Power(Plus(a,Times(b,Power(Cos(v),n))),p)),IntegersQ(n,p))),
ISetDelayed(4365,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(b_DEFAULT,Power($($s("§cos"),v_),n_DEFAULT)),Times(a_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Cot(v),Times(n,p)),Power(Plus(a,Times(b,Power(Sin(v),n))),p)),IntegersQ(n,p))),
ISetDelayed(4366,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§cos"),v_),m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power($($s("§sec"),v_),n_DEFAULT)),Times(b_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Cos(v),Plus(m,Times(CN1,n,p))),Power(Plus(c,Times(b,Power(Sin(v),n)),Times(a,Power(Cos(v),n))),p)),IntegersQ(m,n,p))),
ISetDelayed(4367,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§sec"),v_),m_DEFAULT),Power(Plus(a_DEFAULT,Times(c_DEFAULT,Power($($s("§sec"),v_),n_DEFAULT)),Times(b_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Sec(v),Plus(m,Times(n,p))),Power(Plus(c,Times(b,Power(Sin(v),n)),Times(a,Power(Cos(v),n))),p)),IntegersQ(m,n,p))),
ISetDelayed(4368,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(a_DEFAULT,Times(b_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT)),Times(c_DEFAULT,Power($($s("§csc"),v_),n_DEFAULT))),p_DEFAULT),Power($($s("§sin"),v_),m_DEFAULT))),
    Condition(Times(u,Power(Sin(v),Plus(m,Times(CN1,n,p))),Power(Plus(c,Times(b,Power(Cos(v),n)),Times(a,Power(Sin(v),n))),p)),IntegersQ(m,n,p))),
ISetDelayed(4369,TrigSimplifyAux(Times(u_DEFAULT,Power($($s("§csc"),v_),m_DEFAULT),Power(Plus(a_DEFAULT,Times(b_DEFAULT,Power($($s("§cot"),v_),n_DEFAULT)),Times(c_DEFAULT,Power($($s("§csc"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(Times(u,Power(Csc(v),Plus(m,Times(n,p))),Power(Plus(c,Times(b,Power(Cos(v),n)),Times(a,Power(Sin(v),n))),p)),IntegersQ(m,n,p))),
ISetDelayed(4370,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(a_DEFAULT,Power($($s("§csc"),v_),m_DEFAULT)),Times(b_DEFAULT,Power($($s("§sin"),v_),n_DEFAULT))),p_DEFAULT))),
    Condition(If(And(EqQ(Plus(m,n,Negate(C2)),C0),EqQ(Plus(a,b),C0)),Times(u,Power(Times(a,Sqr(Cos(v)),Power(Power(Sin(v),m),-1)),p)),Times(u,Power(Times(Plus(a,Times(b,Power(Sin(v),Plus(m,n)))),Power(Power(Sin(v),m),-1)),p))),IntegersQ(m,n))),
ISetDelayed(4371,TrigSimplifyAux(Times(u_DEFAULT,Power(Plus(Times(b_DEFAULT,Power($($s("§cos"),v_),n_DEFAULT)),Times(a_DEFAULT,Power($($s("§sec"),v_),m_DEFAULT))),p_DEFAULT))),
    Condition(If(And(EqQ(Plus(m,n,Negate(C2)),C0),EqQ(Plus(a,b),C0)),Times(u,Power(Times(a,Sqr(Sin(v)),Power(Power(Cos(v),m),-1)),p)),Times(u,Power(Times(Plus(a,Times(b,Power(Cos(v),Plus(m,n)))),Power(Power(Cos(v),m),-1)),p))),IntegersQ(m,n))),
ISetDelayed(4372,TrigSimplifyAux(u_),
    u),
ISetDelayed(4373,TrigSimplifyAux(Times(u_DEFAULT,Power(Times(c_DEFAULT,Power($($s("§tan"),v_),n_DEFAULT),Power($($s("§tan"),w_),n_DEFAULT)),p_DEFAULT))),
    Condition(Times(u,Power(Power(Plus(Negate(c),Times(c,$($s("§sec"),w))),n),p)),And(IntegerQ(n),EqQ(w,Times(C2,v))))),
ISetDelayed(4374,ContentFactor($p("expn")),
    TimeConstrained(ContentFactorAux($s("expn")),$s("§$timelimit"),$s("expn"))),
ISetDelayed(4375,ContentFactorAux($p("expn")),
    If(AtomQ($s("expn")),$s("expn"),If(IntegerPowerQ($s("expn")),If(And(SumQ(Part($s("expn"),C1)),Less(NumericFactor(Part($s("expn"),C1,C1)),C0)),Times(Power(CN1,Part($s("expn"),C2)),Power(ContentFactorAux(Negate(Part($s("expn"),C1))),Part($s("expn"),C2))),Power(ContentFactorAux(Part($s("expn"),C1)),Part($s("expn"),C2))),If(ProductQ($s("expn")),Module(List(Set($s("num"),C1),$s("tmp")),CompoundExpression(Set($s("tmp"),Map(Function(If(And(SumQ(Slot1),Less(NumericFactor(Part(Slot1,C1)),C0)),CompoundExpression(Set($s("num"),Negate($s("num"))),ContentFactorAux(Negate(Slot1))),ContentFactorAux(Slot1))),$s("expn"))),Times($s("num"),UnifyNegativeBaseFactors($s("tmp"))))),If(SumQ($s("expn")),With(List(Set($s("lst"),CommonFactors(Apply($s("List"),$s("expn"))))),If(Or(SameQ(Part($s("lst"),C1),C1),SameQ(Part($s("lst"),C1),CN1)),$s("expn"),Times(Part($s("lst"),C1),Apply(Plus,Rest($s("lst")))))),$s("expn")))))),
ISetDelayed(4376,UnifyNegativeBaseFactors(Times(u_DEFAULT,Power(Negate(v_),m_),Power(v_,n_DEFAULT))),
    Condition(UnifyNegativeBaseFactors(Times(Power(CN1,n),u,Power(Negate(v),Plus(m,n)))),IntegerQ(n))),
ISetDelayed(4377,UnifyNegativeBaseFactors(u_),
    u),
ISetDelayed(4378,CommonFactors($p("lst")),
    Module(List($s("lst1"),$s("lst2"),$s("lst3"),$s("lst4"),$s("common"),$s("base"),$s("num")),CompoundExpression(Set($s("lst1"),Map($rubi("Integrate::NonabsurdNumberFactors"),$s("lst"))),Set($s("lst2"),Map($rubi("Integrate::AbsurdNumberFactors"),$s("lst"))),Set($s("num"),Apply($rubi("Integrate::AbsurdNumberGCD"),$s("lst2"))),Set($s("common"),$s("num")),Set($s("lst2"),Map(Function(Times(Slot1,Power($s("num"),-1))),$s("lst2"))),While(True,CompoundExpression(Set($s("lst3"),Map($rubi("Integrate::LeadFactor"),$s("lst1"))),If(Apply($s("SameQ"),$s("lst3")),CompoundExpression(Set($s("common"),Times($s("common"),Part($s("lst3"),C1))),Set($s("lst1"),Map($rubi("Integrate::RemainingFactors"),$s("lst1")))),If(And(EveryQ(Function(And(LogQ(Slot1),IntegerQ(First(Slot1)),Greater(First(Slot1),C0))),$s("lst3")),EveryQ($rubi("Integrate::RationalQ"),Set($s("lst4"),Map(Function(FullSimplify(Times(Slot1,Power(First($s("lst3")),-1)))),$s("lst3"))))),CompoundExpression(Set($s("num"),Apply($s("GCD"),$s("lst4"))),Set($s("common"),Times($s("common"),Log(Power(Part(First($s("lst3")),C1),$s("num"))))),Set($s("lst2"),Map2(Function(Times(Slot1,Slot2,Power($s("num"),-1))),$s("lst2"),$s("lst4"))),Set($s("lst1"),Map($rubi("Integrate::RemainingFactors"),$s("lst1")))),CompoundExpression(Set($s("lst4"),Map($rubi("Integrate::LeadDegree"),$s("lst1"))),If(And(Apply($s("SameQ"),Map($rubi("Integrate::LeadBase"),$s("lst1"))),EveryQ($rubi("Integrate::RationalQ"),$s("lst4"))),CompoundExpression(Set($s("num"),Smallest($s("lst4"))),Set($s("base"),LeadBase(Part($s("lst1"),C1))),If(Unequal($s("num"),C0),Set($s("common"),Times($s("common"),Power($s("base"),$s("num"))))),Set($s("lst2"),Map2(Function(Times(Slot1,Power($s("base"),Plus(Slot2,Negate($s("num")))))),$s("lst2"),$s("lst4"))),Set($s("lst1"),Map($rubi("Integrate::RemainingFactors"),$s("lst1")))),If(And(Equal(Length($s("lst1")),C2),EqQ(Plus(LeadBase(Part($s("lst1"),C1)),LeadBase(Part($s("lst1"),C2))),C0),NeQ(Part($s("lst1"),C1),C1),IntegerQ(Part($s("lst4"),C1)),FractionQ(Part($s("lst4"),C2))),CompoundExpression(Set($s("num"),Min($s("lst4"))),Set($s("base"),LeadBase(Part($s("lst1"),C2))),If(Unequal($s("num"),C0),Set($s("common"),Times($s("common"),Power($s("base"),$s("num"))))),Set($s("lst2"),List(Times(Part($s("lst2"),C1),Power(CN1,Part($s("lst4"),C1))),Part($s("lst2"),C2))),Set($s("lst2"),Map2(Function(Times(Slot1,Power($s("base"),Plus(Slot2,Negate($s("num")))))),$s("lst2"),$s("lst4"))),Set($s("lst1"),Map($rubi("Integrate::RemainingFactors"),$s("lst1")))),If(And(Equal(Length($s("lst1")),C2),EqQ(Plus(LeadBase(Part($s("lst1"),C1)),LeadBase(Part($s("lst1"),C2))),C0),NeQ(Part($s("lst1"),C2),C1),IntegerQ(Part($s("lst4"),C2)),FractionQ(Part($s("lst4"),C1))),CompoundExpression(Set($s("num"),Min($s("lst4"))),Set($s("base"),LeadBase(Part($s("lst1"),C1))),If(Unequal($s("num"),C0),Set($s("common"),Times($s("common"),Power($s("base"),$s("num"))))),Set($s("lst2"),List(Part($s("lst2"),C1),Times(Part($s("lst2"),C2),Power(CN1,Part($s("lst4"),C2))))),Set($s("lst2"),Map2(Function(Times(Slot1,Power($s("base"),Plus(Slot2,Negate($s("num")))))),$s("lst2"),$s("lst4"))),Set($s("lst1"),Map($rubi("Integrate::RemainingFactors"),$s("lst1")))),CompoundExpression(Set($s("num"),MostMainFactorPosition($s("lst3"))),Set($s("lst2"),ReplacePart($s("lst2"),Times(Part($s("lst3"),$s("num")),Part($s("lst2"),$s("num"))),$s("num"))),Set($s("lst1"),ReplacePart($s("lst1"),RemainingFactors(Part($s("lst1"),$s("num"))),$s("num")))))))))),If(EveryQ(Function(SameQ(Slot1,C1)),$s("lst1")),Return(Prepend($s("lst2"),$s("common"))))))))),
ISetDelayed(4379,MostMainFactorPosition($p("lst",$s("List"))),
    Module(List(Set($s("§factor"),C1),Set($s("num"),C1),$s("ii")),CompoundExpression(Do(If(Greater(FactorOrder(Part($s("lst"),$s("ii")),$s("§factor")),C0),CompoundExpression(Set($s("§factor"),Part($s("lst"),$s("ii"))),Set($s("num"),$s("ii")))),List($s("ii"),Length($s("lst")))),$s("num")))),
ISetDelayed(4380,FactorOrder(u_,v_),
    If(SameQ(u,C1),If(SameQ(v,C1),C0,CN1),If(SameQ(v,C1),C1,Order(u,v)))),
ISetDelayed(4381,Smallest($p("num1"),$p("num2")),
    If(Greater($s("num1"),C0),If(Greater($s("num2"),C0),Min($s("num1"),$s("num2")),C0),If(Greater($s("num2"),C0),C0,Max($s("num1"),$s("num2"))))),
ISetDelayed(4382,Smallest($p("lst",$s("List"))),
    Module(List(Set($s("num"),Part($s("lst"),C1))),CompoundExpression(Scan(Function(Set($s("num"),Smallest($s("num"),Slot1))),Rest($s("lst"))),$s("num")))),
ISetDelayed(4383,MonomialFactor(u_,x_Symbol),
    If(AtomQ(u),If(SameQ(u,x),List(C1,C1),List(C0,u)),If(PowerQ(u),If(IntegerQ(Part(u,C2)),With(List(Set($s("lst"),MonomialFactor(Part(u,C1),x))),List(Times(Part($s("lst"),C1),Part(u,C2)),Power(Part($s("lst"),C2),Part(u,C2)))),If(And(SameQ(Part(u,C1),x),FreeQ(Part(u,C2),x)),List(Part(u,C2),C1),List(C0,u))),If(ProductQ(u),With(List(Set($s("lst1"),MonomialFactor(First(u),x)),Set($s("lst2"),MonomialFactor(Rest(u),x))),List(Plus(Part($s("lst1"),C1),Part($s("lst2"),C1)),Times(Part($s("lst1"),C2),Part($s("lst2"),C2)))),If(SumQ(u),Module(List($s("lst"),$s("deg")),CompoundExpression(Set($s("lst"),Map(Function(MonomialFactor(Slot1,x)),Apply($s("List"),u))),Set($s("deg"),Part($s("lst"),C1,C1)),Scan(Function(Set($s("deg"),MinimumDegree($s("deg"),Part(Slot1,C1)))),Rest($s("lst"))),If(Or(EqQ($s("deg"),C0),And(RationalQ($s("deg")),Less($s("deg"),C0))),List(C0,u),List($s("deg"),Apply(Plus,Map(Function(Times(Power(x,Plus(Part(Slot1,C1),Negate($s("deg")))),Part(Slot1,C2))),$s("lst"))))))),List(C0,u)))))),
ISetDelayed(4384,MinimumDegree($p("deg1"),$p("deg2")),
    If(RationalQ($s("deg1")),If(RationalQ($s("deg2")),Min($s("deg1"),$s("deg2")),$s("deg1")),If(RationalQ($s("deg2")),$s("deg2"),With(List(Set($s("deg"),Simplify(Plus($s("deg1"),Negate($s("deg2")))))),If(RationalQ($s("deg")),If(Greater($s("deg"),C0),$s("deg2"),$s("deg1")),If(OrderedQ(List($s("deg1"),$s("deg2"))),$s("deg1"),$s("deg2"))))))),
ISetDelayed(4385,ConstantFactor(u_,x_Symbol),
    If(FreeQ(u,x),List(u,C1),If(AtomQ(u),List(C1,u),If(And(PowerQ(u),FreeQ(Part(u,C2),x)),Module(List(Set($s("lst"),ConstantFactor(Part(u,C1),x)),$s("tmp")),If(IntegerQ(Part(u,C2)),List(Power(Part($s("lst"),C1),Part(u,C2)),Power(Part($s("lst"),C2),Part(u,C2))),CompoundExpression(Set($s("tmp"),PositiveFactors(Part($s("lst"),C1))),If(SameQ($s("tmp"),C1),List(C1,u),List(Power($s("tmp"),Part(u,C2)),Power(Times(NonpositiveFactors(Part($s("lst"),C1)),Part($s("lst"),C2)),Part(u,C2))))))),If(ProductQ(u),With(List(Set($s("lst"),Map(Function(ConstantFactor(Slot1,x)),Apply($s("List"),u)))),List(Apply(Times,Map($s("First"),$s("lst"))),Apply(Times,Map(Function(Part(Slot1,C2)),$s("lst"))))),If(SumQ(u),With(List(Set($s("lst1"),Map(Function(ConstantFactor(Slot1,x)),Apply($s("List"),u)))),If(Apply($s("SameQ"),Map(Function(Part(Slot1,C2)),$s("lst1"))),List(Apply(Plus,Map($s("First"),$s("lst1"))),Part($s("lst1"),C1,C2)),With(List(Set($s("lst2"),CommonFactors(Map($s("First"),$s("lst1"))))),List(First($s("lst2")),Apply(Plus,Map2(Times,Rest($s("lst2")),Map(Function(Part(Slot1,C2)),$s("lst1")))))))),List(C1,u))))))),
ISetDelayed(4386,PositiveFactors(u_),
    If(EqQ(u,C0),C1,If(RationalQ(u),Abs(u),If(GtQ(u,C0),u,If(ProductQ(u),Map($rubi("Integrate::PositiveFactors"),u),C1))))),
ISetDelayed(4387,NonpositiveFactors(u_),
    If(EqQ(u,C0),u,If(RationalQ(u),Sign(u),If(GtQ(u,C0),C1,If(ProductQ(u),Map($rubi("Integrate::NonpositiveFactors"),u),u))))),
ISetDelayed(4388,PolynomialInQ(u_,v_,x_Symbol),
    PolynomialInAuxQ(u,NonfreeFactors(NonfreeTerms(v,x),x),x)),
ISetDelayed(4389,PolynomialInAuxQ(u_,v_,x_),
    If(SameQ(u,v),True,If(AtomQ(u),UnsameQ(u,x),If(PowerQ(u),If(And(PowerQ(v),SameQ(Part(u,C1),Part(v,C1))),IGtQ(Times(Part(u,C2),Power(Part(v,C2),-1)),C0),And(IGtQ(Part(u,C2),C0),PolynomialInAuxQ(Part(u,C1),v,x))),If(Or(SumQ(u),ProductQ(u)),Catch(CompoundExpression(Scan(Function(If(Not(PolynomialInAuxQ(Slot1,v,x)),Throw(False))),u),True)),False))))),
ISetDelayed(4390,ExponentIn(u_,v_,x_Symbol),
    ExponentInAux(u,NonfreeFactors(NonfreeTerms(v,x),x),x)),
ISetDelayed(4391,ExponentInAux(u_,v_,x_),
    If(SameQ(u,v),C1,If(AtomQ(u),C0,If(PowerQ(u),If(And(PowerQ(v),SameQ(Part(u,C1),Part(v,C1))),Times(Part(u,C2),Power(Part(v,C2),-1)),Times(Part(u,C2),ExponentInAux(Part(u,C1),v,x))),If(ProductQ(u),Apply(Plus,Map(Function(ExponentInAux(Slot1,v,x)),Apply($s("List"),u))),Apply($s("Max"),Map(Function(ExponentInAux(Slot1,v,x)),Apply($s("List"),u)))))))),
ISetDelayed(4392,PolynomialInSubst(u_,v_,x_Symbol),
    With(List(Set(w,NonfreeTerms(v,x))),ReplaceAll(PolynomialInSubstAux(u,NonfreeFactors(w,x),x),List(Rule(x,Times(Plus(x,Negate(FreeTerms(v,x))),Power(FreeFactors(w,x),-1))))))),
ISetDelayed(4393,PolynomialInSubstAux(u_,v_,x_),
    If(SameQ(u,v),x,If(AtomQ(u),u,If(PowerQ(u),If(And(PowerQ(v),SameQ(Part(u,C1),Part(v,C1))),Power(x,Times(Part(u,C2),Power(Part(v,C2),-1))),Power(PolynomialInSubstAux(Part(u,C1),v,x),Part(u,C2))),Map(Function(PolynomialInSubstAux(Slot1,v,x)),u))))),
ISetDelayed(4394,PolynomialDivide(u_,v_,x_Symbol),
    Module(List(Set($s("quo"),PolynomialQuotient(u,v,x)),Set($s("rem"),PolynomialRemainder(u,v,x)),$s("free"),$s("monomial")),CompoundExpression(Set($s("quo"),Apply(Plus,Map(Function(Simp(Together(Times(Coefficient($s("quo"),x,Slot1),Power(x,Slot1))),x)),Exponent($s("quo"),x,$s("List"))))),Set($s("rem"),Together($s("rem"))),Set($s("free"),FreeFactors($s("rem"),x)),Set($s("rem"),NonfreeFactors($s("rem"),x)),Set($s("monomial"),Power(x,Exponent($s("rem"),x,$s("Min")))),If(NegQ(Coefficient($s("rem"),x,C0)),Set($s("monomial"),Negate($s("monomial")))),Set($s("rem"),Apply(Plus,Map(Function(Simp(Together(Times(Coefficient($s("rem"),x,Slot1),Power(x,Slot1),Power($s("monomial"),-1))),x)),Exponent($s("rem"),x,$s("List"))))),If(BinomialQ(v,x),Plus($s("quo"),Times($s("free"),$s("monomial"),$s("rem"),Power(ExpandToSum(v,x),-1))),Plus($s("quo"),Times($s("free"),$s("monomial"),$s("rem"),Power(v,-1))))))),
ISetDelayed(4395,PolynomialDivide(u_,v_,w_,x_Symbol),
    ReplaceAll(PolynomialDivide(PolynomialInSubst(u,w,x),PolynomialInSubst(v,w,x),x),List(Rule(x,w))))
  );
}
