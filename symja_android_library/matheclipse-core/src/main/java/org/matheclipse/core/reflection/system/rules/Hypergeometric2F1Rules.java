package org.matheclipse.core.reflection.system.rules;

import org.matheclipse.core.interfaces.IAST;

import static org.matheclipse.core.expression.F.*;
import org.matheclipse.core.interfaces.IAST;

/**
 * <p>
 * Generated by <code>org.matheclipse.core.preprocessor.RulePreprocessor</code>.
 * </p>
 * <p>
 * See GIT repository at: <a href="https://github.com/axkr/symja_android_library">github.com/axkr/symja_android_library
 * under the tools directory</a>.
 * </p>
 */
public interface Hypergeometric2F1Rules {
  /**
   * <ul>
   * <li>index 0 - number of equal rules in <code>RULES</code></li>
	 * </ul>
	 */
  final public static int[] SIZES = { 0, 1 };

  final public static IAST RULES = List(
    IInit(Hypergeometric2F1, SIZES),
    // Hypergeometric2F1(1,2,3/2,z_):=(Sqrt(z)*Sqrt(1-z)+ArcSin(Sqrt(z)))/(2*(1-z)^(3/2)*Sqrt(z))
    ISetDelayed(Hypergeometric2F1(C1,C2,QQ(3L,2L),z_),
					Times(Power(Times(C2, Power(Subtract(C1, z), QQ(3L, 2L)), Sqrt(z)), CN1),
							Plus(Times(Sqrt(z), Sqrt(Subtract(C1, z))), ArcSin(Sqrt(z))))),
			// Hypergeometric2F1(m_Integer,n_IntegerQ,2,1):=CatalanNumber(-n)/;n<0&&m==n+1
			ISetDelayed(Hypergeometric2F1($p(m, Integer), $p(n, IntegerQ), C2, C1),
					Condition(CatalanNumber(Negate(n)), And(Less(n, C0), Equal(m, Plus(n, C1))))));
}
